{"version":3,"sources":["components/kkForm.js","actions/KKListActions.js","actions/KKCardActions.js","actions/index.js","components/kkCard.js","components/kkActionButton.js","components/kkList.js","components/kkButton.js","components/kkAddNewButton.js","components/kkCreate.js","components/App.js","serviceWorker.js","reducers/listReducer.js","reducers/index.js","store/index.js","index.js"],"names":["KKForm","React","memo","list","text","onChange","closeForm","children","placeholder","Container","styled","div","StyledCard","Card","StyledTextarea","Textarea","ButtonContainer","StyledIcon","Icon","autoFocus","onBlur","value","e","onMouseDown","addList","title","type","CONSTANTS","ADD_LIST","payload","sort","droppableIdStart","droppableIdEnd","droppableIndexStart","droppableIndexEnd","draggableId","DRAG_HAPPENED","addCard","listID","ADD_CARD","EDIT_CARD","CardContainer","EditButton","connect","id","index","dispatch","useState","editMode","setEditMode","cardText","setText","String","provided","ref","innerRef","draggableProps","dragHandleProps","fontSize","CardContent","Typography","gutterBottom","KKActionButton","state","formOpen","openForm","setState","handleInputChange","target","handleAddList","props","handleAddCard","renderAddButton","buttonText","buttonTextOpacity","buttonTextColor","buttonTextBackground","OpenFormButton","onClick","style","flexShrink","renderForm","buttonTitle","StyledButton","Button","variant","this","Component","ListContainer","KKList","cards","droppableId","droppableProps","map","card","key","KKButton","KKAddNewButton","StyledAddNewButton","KKCreate","App","onDragEnd","result","destination","source","lists","direction","Boolean","window","location","hostname","match","cardID","initialState","listReducer","action","newList","newCard","newState","splice","find","startList","endList","newText","newCards","combineReducers","store","createStore","rootReducer","GlobalStyle","createGlobalStyle","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.75e82b5d.chunk.js","sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Card, Button, Icon } from \"@material-ui/core\";\r\nimport Textarea from \"react-textarea-autosize\";\r\n\r\nconst KKForm = React.memo(\r\n  ({ list, text = \"\", onChange, closeForm, children }) => {\r\n    const placeholder = list\r\n      ? \"Enter list title...\"\r\n      : \"Enter a title for this card...\";\r\n\r\n    const Container = styled.div`\r\n      width: ${list ? \"300px\" : \"100%\"};\r\n      margin-bottom: 8px;\r\n    `;\r\n\r\n    const StyledCard = styled(Card)`\r\n      min-height: 85px;\r\n      padding: 6px 8px 2px;\r\n    `;\r\n\r\n    const StyledTextarea = styled(Textarea)`\r\n      resize: none;\r\n      width: 100%;\r\n      overflow: hidden;\r\n      outline: none;\r\n      border: none;\r\n    `;\r\n\r\n    const ButtonContainer = styled.div`\r\n      margin-top: 8px;\r\n      display: flex;\r\n      align-items: center;\r\n      margin-left: 8px;\r\n    `;\r\n\r\n    const StyledIcon = styled(Icon)`\r\n      margin-left: 8px;\r\n      cursor: pointer;\r\n    `;\r\n\r\n    return (\r\n      <Container>\r\n        <StyledCard>\r\n          <StyledTextarea\r\n            placeholder={placeholder}\r\n            autoFocus\r\n            onBlur={closeForm}\r\n            value={text}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n        </StyledCard>\r\n        <ButtonContainer>\r\n          {children}\r\n          <StyledIcon onMouseDown={closeForm}>close</StyledIcon>\r\n        </ButtonContainer>\r\n      </Container>\r\n    );\r\n  }\r\n);\r\n\r\nexport default KKForm;\r\n","import { CONSTANTS } from \"./index\";\r\n\r\nexport const addList = (title) => {\r\n  return {\r\n    type: CONSTANTS.ADD_LIST,\r\n    payload: title,\r\n  };\r\n};\r\n\r\nexport const sort = (\r\n  droppableIdStart,\r\n  droppableIdEnd,\r\n  droppableIndexStart,\r\n  droppableIndexEnd,\r\n  draggableId,\r\n  type\r\n) => {\r\n  return {\r\n    type: CONSTANTS.DRAG_HAPPENED,\r\n    payload: {\r\n      droppableIdStart,\r\n      droppableIdEnd,\r\n      droppableIndexStart,\r\n      droppableIndexEnd,\r\n      draggableId,\r\n      type,\r\n    },\r\n  };\r\n};\r\n","import { CONSTANTS } from \"./index\";\r\n\r\nexport const addCard = (listID, text) => {\r\n  return {\r\n    type: CONSTANTS.ADD_CARD,\r\n    payload: { text, listID },\r\n  };\r\n};\r\n\r\nexport const editCard = (id, listID, newText) => {\r\n  return {\r\n    type: CONSTANTS.EDIT_CARD,\r\n    payload: { id, listID, newText },\r\n  };\r\n};\r\n","export * from \"./KKListActions\";\r\nexport * from \"./KKCardActions\";\r\n\r\nexport const CONSTANTS = {\r\n  ADD_CARD: \"ADD_CARD\",\r\n  ADD_LIST: \"ADD_LIST\",\r\n  DRAG_HAPPENED: \"DRAG_HAPPENED\",\r\n  EDIT_CARD: \"EDIT_CARD\",\r\n};\r\n","import React, { useState } from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { Card, CardContent, Icon } from \"@material-ui/core\";\r\nimport { Draggable } from \"react-beautiful-dnd\";\r\nimport styled from \"styled-components\";\r\nimport KKForm from \"./kkForm\";\r\nimport { editCard } from \"../actions\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst CardContainer = styled.div`\r\n  margin: 0 0 8px 0;\r\n  position: relative;\r\n`;\r\n\r\nconst EditButton = styled(Icon)`\r\n  position: absolute;\r\n  display: none;\r\n  right: 5px;\r\n  top: 5px;\r\n  opacity: 0.5;\r\n  ${CardContainer}:hover & {\r\n    display: block;\r\n    cursor: pointer;\r\n  }\r\n  &:hover {\r\n    opacity: 0.8;\r\n  }\r\n`;\r\n\r\nconst KKCard = ({ text, id, listID, index, dispatch }) => {\r\n  const [editMode, setEditMode] = useState(false);\r\n  const [cardText, setText] = useState(text);\r\n\r\n  const closeForm = (e) => {\r\n    setEditMode(false);\r\n  };\r\n\r\n  const saveCard = (e) => {\r\n    console.log(\"SAVE\");\r\n    e.preventDefault();\r\n    dispatch(editCard(id, listID, cardText));\r\n    setEditMode(false);\r\n  };\r\n\r\n  if (editMode)\r\n    return <KKForm text={cardText} setText={setText} closeForm={closeForm} />;\r\n\r\n  return (\r\n    <Draggable draggableId={String(id)} index={index}>\r\n      {(provided) => (\r\n        <CardContainer\r\n          ref={provided.innerRef}\r\n          {...provided.draggableProps}\r\n          {...provided.dragHandleProps}\r\n        >\r\n          <Card>\r\n            <EditButton fontSize=\"small\" onMouseDown={() => setEditMode(true)}>\r\n              edit\r\n            </EditButton>\r\n            <CardContent>\r\n              <Typography gutterBottom>{text}</Typography>\r\n            </CardContent>\r\n          </Card>\r\n        </CardContainer>\r\n      )}\r\n    </Draggable>\r\n  );\r\n};\r\n\r\nexport default connect()(KKCard);\r\n","import React, { Component } from \"react\";\r\nimport { Icon, Card, Button } from \"@material-ui/core\";\r\nimport Textarea from \"react-textarea-autosize\";\r\nimport { connect } from \"react-redux\";\r\nimport { addList, addCard } from \"../actions\";\r\nimport styled from \"styled-components\";\r\n\r\nclass KKActionButton extends Component {\r\n  state = {\r\n    formOpen: false,\r\n    text: \"\",\r\n  };\r\n\r\n  openForm = () => {\r\n    this.setState({ formOpen: true });\r\n  };\r\n\r\n  closeForm = (e) => {\r\n    this.setState({ formOpen: false, text: \"\" });\r\n  };\r\n\r\n  handleInputChange = (e) => {\r\n    this.setState({ text: e.target.value });\r\n  };\r\n\r\n  handleAddList = () => {\r\n    const { dispatch } = this.props;\r\n    const { text } = this.state;\r\n    if (text) {\r\n      this.setState({ text: \"\" });\r\n      dispatch(addList(text));\r\n    }\r\n  };\r\n\r\n  handleAddCard = () => {\r\n    const { dispatch, listID } = this.props;\r\n    const { text } = this.state;\r\n    if (text) {\r\n      this.setState({ text: \"\" });\r\n      dispatch(addCard(listID, text));\r\n    }\r\n  };\r\n\r\n  renderAddButton = () => {\r\n    const { list } = this.props;\r\n\r\n    const buttonText = list ? \"Add another list\" : \"Add another card\";\r\n    const buttonTextOpacity = list ? 1 : 0.5;\r\n    const buttonTextColor = list ? \"white\" : \"inherit\";\r\n    const buttonTextBackground = list ? \"rgba(0,0,0,.15)\" : \"inherit\";\r\n\r\n    const OpenFormButton = styled.div`\r\n      display: flex;\r\n      align-items: center;\r\n      cursor: pointer;\r\n      border-radius: 3px;\r\n      height: 36px;\r\n      width: 300px;\r\n      margin-left: 8px;\r\n      padding-left: 10px;\r\n      padding-right: 10px;\r\n      opacity: ${buttonTextOpacity};\r\n      color: ${buttonTextColor};\r\n      background-color: ${buttonTextBackground};\r\n    `;\r\n\r\n    return (\r\n      <OpenFormButton onClick={this.openForm}>\r\n        <Icon>add</Icon>\r\n        <p style={{ flexShrink: 0 }}>{buttonText}</p>\r\n      </OpenFormButton>\r\n    );\r\n  };\r\n\r\n  renderForm = () => {\r\n    const { list } = this.props;\r\n\r\n    const placeholder = list\r\n      ? \"Enter list title...\"\r\n      : \"Enter a title for this card...\";\r\n    const buttonTitle = list ? \"Add List\" : \"Add Card\";\r\n\r\n    const Container = styled.div`\r\n      width: ${list ? \"300px\" : \"100%\"};\r\n    `;\r\n\r\n    const StyledCard = styled(Card)`\r\n      min-height: 85px;\r\n      padding: 6px 8px 2px;\r\n    `;\r\n\r\n    const StyledTextarea = styled(Textarea)`\r\n      resize: none;\r\n      width: 100%;\r\n      overflow: hidden;\r\n      outline: none;\r\n      border: none;\r\n    `;\r\n\r\n    const StyledButton = styled(Button)`\r\n      && {\r\n        color: white;\r\n        background: #5aac44;\r\n      }\r\n    `;\r\n\r\n    const ButtonContainer = styled.div`\r\n      margin-top: 8px;\r\n      display: flex;\r\n      align-items: center;\r\n      margin-left: 8px;\r\n    `;\r\n\r\n    const StyledIcon = styled(Icon)`\r\n      margin-left: 8px;\r\n      cursor: pointer;\r\n    `;\r\n\r\n    return (\r\n      <Container>\r\n        <StyledCard>\r\n          <StyledTextarea\r\n            placeholder={placeholder}\r\n            autoFocus\r\n            onBlur={this.closeForm}\r\n            value={this.state.text}\r\n            onChange={this.handleInputChange}\r\n          />\r\n        </StyledCard>\r\n        <ButtonContainer>\r\n          <StyledButton\r\n            onMouseDown={list ? this.handleAddList : this.handleAddCard}\r\n            variant=\"contained\"\r\n            children={buttonTitle}\r\n          />\r\n          <StyledIcon onClick={this.closeForm}>close</StyledIcon>\r\n        </ButtonContainer>\r\n      </Container>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return this.state.formOpen ? this.renderForm() : this.renderAddButton();\r\n  }\r\n}\r\n\r\nexport default connect()(KKActionButton);\r\n","import React from \"react\";\r\nimport KKCard from \"./kkCard\";\r\nimport KKActionButton from \"./kkActionButton\";\r\nimport { Droppable, Draggable } from \"react-beautiful-dnd\";\r\nimport styled from \"styled-components\";\r\n\r\nconst ListContainer = styled.div`\r\n  background-color: #dfe3e6;\r\n  border-radius: 3px;\r\n  width: 300px;\r\n  height: 100%;\r\n  padding: 8px;\r\n  margin-right: 8px;\r\n`;\r\n\r\nconst KKList = ({ title, cards, listID, index }) => {\r\n  return (\r\n    <Draggable draggableId={String(listID)} index={index}>\r\n      {(provided) => (\r\n        <ListContainer\r\n          {...provided.draggableProps}\r\n          ref={provided.innerRef}\r\n          {...provided.dragHandleProps}\r\n        >\r\n          <Droppable droppableId={String(listID)}>\r\n            {(provided) => (\r\n              <div {...provided.droppableProps} ref={provided.innerRef}>\r\n                <h4>{title}</h4>\r\n                {cards.map((card, index) => (\r\n                  <KKCard\r\n                    key={card.id}\r\n                    index={index}\r\n                    text={card.text}\r\n                    id={card.id}\r\n                    listID={listID}\r\n                  />\r\n                ))}\r\n                {provided.placeholder}\r\n                <KKActionButton listID={listID} />\r\n              </div>\r\n            )}\r\n          </Droppable>\r\n        </ListContainer>\r\n      )}\r\n    </Draggable>\r\n  );\r\n};\r\n\r\nexport default KKList;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Button } from \"@material-ui/core\";\r\n\r\nconst StyledButton = styled(Button)`\r\n  && {\r\n    color: white;\r\n    background: #5aac44;\r\n  }\r\n`;\r\n\r\nconst KKButton = ({ text, onClick }) => {\r\n  return (\r\n    <StyledButton variant=\"contained\" onMouseDown={onClick}>\r\n      {text}\r\n    </StyledButton>\r\n  );\r\n};\r\n\r\nexport default KKButton;\r\n","import React from \"react\";\r\nimport { Icon } from \"@material-ui/core\";\r\nimport styled from \"styled-components\";\r\n\r\nconst KKAddNewButton = ({ list, onClick }) => {\r\n  const buttonText = list ? \"Add another list\" : \"Add another card\";\r\n  const buttonTextOpacity = list ? 1 : 0.5;\r\n  const buttonTextColor = list ? \"white\" : \"inherit\";\r\n  const buttonTextBackground = list ? \"rgba(0,0,0,.15)\" : \"inherit\";\r\n\r\n  const StyledAddNewButton = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    cursor: pointer;\r\n    border-radius: 3px;\r\n    height: 36px;\r\n    width: 300px;\r\n    margin-left: 8px;\r\n    padding-left: 10px;\r\n    padding-right: 10px;\r\n    opacity: ${buttonTextOpacity};\r\n    color: ${buttonTextColor};\r\n    background-color: ${buttonTextBackground};\r\n  `;\r\n\r\n  return (\r\n    <StyledAddNewButton onClick={onClick}>\r\n      <Icon>add</Icon>\r\n      <p style={{ flexShrink: 0 }}> {buttonText}</p>\r\n    </StyledAddNewButton>\r\n  );\r\n};\r\n\r\nexport default KKAddNewButton;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport KKForm from \"./kkForm\";\r\nimport KKButton from \"./kkButton\";\r\nimport KKAddNewButton from \"./kkAddNewButton\";\r\nimport { addList } from \"./../actions/KKListActions\";\r\nimport { addCard } from \"./../actions/KKCardActions\";\r\n\r\nclass KKCreate extends Component {\r\n  state = {\r\n    formOpen: false,\r\n    text: \"\",\r\n  };\r\n\r\n  openForm = () => {\r\n    this.setState({ formOpen: true });\r\n  };\r\n\r\n  closeForm = (e) => {\r\n    this.setState({ formOpen: false, text: \"\" });\r\n  };\r\n\r\n  handleInputChange = (e) => {\r\n    this.setState({ text: e.target.value });\r\n  };\r\n\r\n  handleAddList = () => {\r\n    const { dispatch } = this.props;\r\n    const { text } = this.state;\r\n    if (text) {\r\n      this.setState({ text: \"\" });\r\n      dispatch(addList(text));\r\n    }\r\n  };\r\n\r\n  handleAddCard = () => {\r\n    const { dispatch, listID } = this.props;\r\n    const { text } = this.state;\r\n    if (text) {\r\n      this.setState({ text: \"\" });\r\n      dispatch(addCard(listID, text));\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { text, formOpen } = this.state;\r\n    const { list } = this.props;\r\n\r\n    if (formOpen)\r\n      return (\r\n        <KKForm\r\n          text={text}\r\n          onChange={this.handleInputChange}\r\n          closeForm={this.closeForm}\r\n        >\r\n          <KKButton\r\n            text={list ? \"Add List\" : \"Add Card\"}\r\n            onClick={list ? this.handleAddList : this.handleAddCard}\r\n          ></KKButton>\r\n        </KKForm>\r\n      );\r\n    else return <KKAddNewButton list={list} onClick={this.openForm} />;\r\n  }\r\n}\r\n\r\nexport default connect()(KKCreate);\r\n","import React, { Component } from \"react\";\r\nimport KKList from \"./kkList\";\r\nimport { connect } from \"react-redux\";\r\nimport { DragDropContext, Droppable } from \"react-beautiful-dnd\";\r\nimport { sort } from \"../actions\";\r\nimport styled from \"styled-components\";\r\nimport KKCreate from \"./kkCreate\";\r\n\r\nconst ListContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n`;\r\n\r\nclass App extends Component {\r\n  onDragEnd = (result) => {\r\n    const { destination, source, draggableId, type } = result;\r\n    if (!destination) return;\r\n    this.props.dispatch(\r\n      sort(\r\n        source.droppableId,\r\n        destination.droppableId,\r\n        source.index,\r\n        destination.index,\r\n        draggableId,\r\n        type\r\n      )\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { lists } = this.props;\r\n    return (\r\n      <DragDropContext onDragEnd={this.onDragEnd}>\r\n        <h2>Hello World</h2>\r\n        <Droppable droppableId=\"all-lists\" direction=\"horizontal\" type=\"list\">\r\n          {(provided) => (\r\n            <ListContainer {...provided.droppableProps} ref={provided.innerRef}>\r\n              {lists.map((list, index) => (\r\n                <KKList\r\n                  key={list.id}\r\n                  listID={list.id}\r\n                  title={list.title}\r\n                  cards={list.cards}\r\n                  index={index}\r\n                />\r\n              ))}\r\n              {provided.placeholder}\r\n              <KKCreate list />\r\n            </ListContainer>\r\n          )}\r\n        </Droppable>\r\n      </DragDropContext>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  lists: state.lists,\r\n});\r\n\r\nexport default connect(mapStateToProps)(App);\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { CONSTANTS } from \"./../actions/index\";\r\n\r\nlet listID = 2,\r\n  cardID = 6;\r\n\r\nconst initialState = [\r\n  {\r\n    title: \"Learn ReactJS\",\r\n    id: `list-${0}`,\r\n    cards: [\r\n      {\r\n        id: `card-${0}`,\r\n        text: \"Learn reactJS from Code With Mosh and make small projects.\",\r\n      },\r\n      {\r\n        id: `card-${1}`,\r\n        text: \"Make a simple TODO list App\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    title: \"Make a Trello like app\",\r\n    id: `list-${1}`,\r\n    cards: [\r\n      {\r\n        id: `card-${2}`,\r\n        text: \"Learn DND.\",\r\n      },\r\n      {\r\n        id: `card-${3}`,\r\n        text: \"Learn material UI\",\r\n      },\r\n      {\r\n        id: `card-${4}`,\r\n        text: \"Make project with help from youtube\",\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\nconst listReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case CONSTANTS.ADD_LIST:\r\n      const newList = {\r\n        title: action.payload,\r\n        cards: [],\r\n        id: `list-${listID++}`,\r\n      };\r\n      return [...state, newList];\r\n\r\n    case CONSTANTS.ADD_CARD: {\r\n      const newCard = {\r\n        id: `card-${cardID++}`,\r\n        text: action.payload.text,\r\n      };\r\n\r\n      const newState = state.map((list) => {\r\n        if (list.id === action.payload.listID)\r\n          return {\r\n            ...list,\r\n            cards: [...list.cards, newCard],\r\n          };\r\n        else return list;\r\n      });\r\n      return newState;\r\n    }\r\n\r\n    case CONSTANTS.DRAG_HAPPENED:\r\n      const {\r\n        droppableIdStart,\r\n        droppableIdEnd,\r\n        droppableIndexStart,\r\n        droppableIndexEnd,\r\n        draggableId,\r\n        type,\r\n      } = action.payload;\r\n      const newState = [...state];\r\n\r\n      if (type === \"list\") {\r\n        const list = newState.splice(droppableIndexStart, 1);\r\n        newState.splice(droppableIndexEnd, 0, ...list);\r\n        return newState;\r\n      }\r\n\r\n      // in the same list\r\n      if (droppableIdStart === droppableIdEnd) {\r\n        const list = state.find((list) => droppableIdStart === list.id);\r\n        const card = list.cards.splice(droppableIndexStart, 1);\r\n        list.cards.splice(droppableIndexEnd, 0, ...card);\r\n      } else {\r\n        const startList = state.find((list) => droppableIdStart === list.id);\r\n        const card = startList.cards.splice(droppableIndexStart, 1);\r\n        const endList = state.find((list) => droppableIdEnd === list.id);\r\n        endList.cards.splice(droppableIndexEnd, 0, ...card);\r\n      }\r\n      return newState;\r\n\r\n    case CONSTANTS.EDIT_CARD: {\r\n      const { id, listID, newText } = action.payload;\r\n      return state.map((list) => {\r\n        if (list.id === listID) {\r\n          const newCards = list.cards.map((card) => {\r\n            if (card.id === id) {\r\n              card.text = newText;\r\n              return card;\r\n            } else return card;\r\n          });\r\n          return { ...list, cards: newCards };\r\n        } else return list;\r\n      });\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default listReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport listReducer from \"./listReducer\";\r\n\r\nexport default combineReducers({\r\n  lists: listReducer,\r\n});\r\n","import { createStore } from \"redux\";\r\nimport rootReducer from \"../reducers\";\r\n\r\nconst store = createStore(rootReducer);\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport store from \"./store\";\nimport { createGlobalStyle } from \"styled-components\";\n\nconst GlobalStyle = createGlobalStyle`\n  html {\n    background-color: crimson;\n  }\n`;\n\nReactDOM.render(\n  <Provider store={store}>\n    <GlobalStyle />\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}