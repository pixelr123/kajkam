{"version":3,"sources":["components/kkForm.js","actions/KKListActions.js","actions/KKCardActions.js","actions/index.js","components/kkButton.js","components/kkCard.js","components/kkAddNewButton.js","components/kkCreate.js","components/kkList.js","components/kkBoard.js","actions/boardActions.js","components/home.js","components/App.js","serviceWorker.js","reducers/boardReducer.js","reducers/currentBoardReducer.js","reducers/listReducer.js","reducers/cardReducer.js","reducers/index.js","store/index.js","index.js"],"names":["Container","styled","div","StyledCard","Card","StyledTextarea","Textarea","ButtonContainer","StyledIcon","Icon","KKForm","React","memo","list","text","onChange","closeForm","children","placeholder","autoFocus","onBlur","value","e","onMouseDown","addList","listTitle","dispatch","getState","type","CONSTANTS","ADD_LIST","payload","boardID","currentBoard","listID","uuid","sort","droppableIdStart","droppableIdEnd","droppableIndexStart","droppableIndexEnd","draggableId","DRAG_HAPPENED","addCard","ADD_CARD","cardID","EDIT_CARD","DELETE_CARD","EDIT_LIST_TITLE","DELETE_LIST","ADD_BOARD","SET_CURRENT_BOARD","StyledButton","Button","KKButton","onClick","variant","CardContainer","EditButton","DeleteButton","KKCard","id","index","useState","editMode","setEditMode","cardText","setText","eraseCard","deleteCard","target","preventDefault","newText","editCard","String","provided","ref","innerRef","draggableProps","dragHandleProps","onDoubleClick","fontSize","CardContent","Typography","connect","KKAddNewButton","buttonText","buttonTextOpacity","buttonTextColor","buttonTextBackground","StyledAddNewButton","style","flexShrink","KKCreate","state","formOpen","openForm","setState","handleInputChange","handleAddList","props","handleAddCard","this","Component","ListContainer","StyledInput","input","TitleContainer","ListTitle","h4","KKList","title","cards","setListTitle","handleFocus","select","handleChange","handleCloseEdit","newListTitle","editListTitle","handleDeleteList","console","log","deleteList","droppableId","onFocus","droppableProps","map","card","key","KKBoard","onDragEnd","result","destination","source","match","params","setCurrentBoard","lists","board","boards","textAlign","listOrder","to","boardTitle","direction","listCards","HomeContainer","Thumbnails","Thumbnail","Title","CreateTitle","h3","CreateInput","newBoardTitle","setNewBoardTitle","handleSubmit","Object","entries","textDecoration","onSubmit","App","path","component","Home","Boolean","window","location","hostname","initialState","boardReducer","action","newBoard","push","newLists","filter","draggedList","splice","currentBoardReducer","listReducer","newList","newState","newCards","startList","endList","cardReducer","newCard","combineReducers","persistConfig","storage","persistedReducer","persistReducer","rootReducer","store","createStore","applyMiddleware","thunk","persistor","persistStore","Store","GlobalStyle","createGlobalStyle","ReactDOM","render","loading","document","getElementById","$","bind","nodeName","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.e4541e02.chunk.js","sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Card, Button, Icon } from \"@material-ui/core\";\r\nimport Textarea from \"react-textarea-autosize\";\r\n\r\nconst Container = styled.div`\r\n  width: 284px;\r\n  margin-bottom: 8px;\r\n`;\r\n\r\nconst StyledCard = styled(Card)`\r\n  min-height: 85px;\r\n  padding: 6px 8px 2px;\r\n`;\r\n\r\nconst StyledTextarea = styled(Textarea)`\r\n  resize: none;\r\n  width: 100%;\r\n  overflow: hidden;\r\n  outline: none;\r\n  border: none;\r\n`;\r\n\r\nconst ButtonContainer = styled.div`\r\n  margin-top: 8px;\r\n  display: flex;\r\n  align-items: center;\r\n  margin-left: 8px;\r\n`;\r\n\r\nconst StyledIcon = styled(Icon)`\r\n  margin-left: 8px;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst KKForm = React.memo(\r\n  ({ list, text = \"\", onChange, closeForm, children }) => {\r\n    const placeholder = list\r\n      ? \"Enter list title...\"\r\n      : \"Enter a title for this card...\";\r\n\r\n    return (\r\n      <Container>\r\n        <StyledCard>\r\n          <StyledTextarea\r\n            placeholder={placeholder}\r\n            autoFocus\r\n            onBlur={closeForm}\r\n            value={text}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n        </StyledCard>\r\n        <ButtonContainer>\r\n          {children}\r\n          <StyledIcon onMouseDown={closeForm}>close</StyledIcon>\r\n        </ButtonContainer>\r\n      </Container>\r\n    );\r\n  }\r\n);\r\n\r\nexport default KKForm;\r\n","import { CONSTANTS } from \"./index\";\r\nimport uuid from \"react-uuid\";\r\n\r\nexport const addList = (listTitle) => {\r\n  return (dispatch, getState) => {\r\n    dispatch({\r\n      type: CONSTANTS.ADD_LIST,\r\n      payload: {\r\n        listTitle,\r\n        boardID: getState().currentBoard.boardID,\r\n        listID: uuid(),\r\n      },\r\n    });\r\n  };\r\n};\r\n\r\nexport const editListTitle = (listID, newListTitle) => {\r\n  return {\r\n    type: CONSTANTS.EDIT_LIST_TITLE,\r\n    payload: {\r\n      listID,\r\n      newListTitle,\r\n    },\r\n  };\r\n};\r\n\r\nexport const deleteList = (listID) => {\r\n  console.log(\"List Actions: delete list: \", listID);\r\n  return (dispatch, getState) => {\r\n    return dispatch({\r\n      type: CONSTANTS.DELETE_LIST,\r\n      payload: {\r\n        listID,\r\n        boardID: getState().currentBoard.boardID,\r\n      },\r\n    });\r\n  };\r\n};\r\n\r\nexport const sort = (\r\n  droppableIdStart,\r\n  droppableIdEnd,\r\n  droppableIndexStart,\r\n  droppableIndexEnd,\r\n  draggableId,\r\n  type\r\n) => {\r\n  return (dispatch, getState) => {\r\n    dispatch({\r\n      type: CONSTANTS.DRAG_HAPPENED,\r\n      payload: {\r\n        droppableIdStart,\r\n        droppableIdEnd,\r\n        droppableIndexStart,\r\n        droppableIndexEnd,\r\n        draggableId,\r\n        type,\r\n        boardID: getState().currentBoard.boardID,\r\n      },\r\n    });\r\n  };\r\n};\r\n","import { CONSTANTS } from \"./index\";\r\nimport uuid from \"react-uuid\";\r\n\r\nexport const addCard = (listID, text) => {\r\n  return {\r\n    type: CONSTANTS.ADD_CARD,\r\n    payload: { text, listID, cardID: uuid() },\r\n  };\r\n};\r\n\r\nexport const editCard = (cardID, listID, newText) => {\r\n  return {\r\n    type: CONSTANTS.EDIT_CARD,\r\n    payload: { cardID, listID, newText },\r\n  };\r\n};\r\n\r\nexport const deleteCard = (cardID, listID) => {\r\n  return {\r\n    type: CONSTANTS.DELETE_CARD,\r\n    payload: { cardID, listID },\r\n  };\r\n};\r\n","export * from \"./boardActions\";\r\nexport * from \"./KKListActions\";\r\nexport * from \"./KKCardActions\";\r\n\r\nexport const CONSTANTS = {\r\n  ADD_CARD: \"ADD_CARD\",\r\n  ADD_LIST: \"ADD_LIST\",\r\n  DRAG_HAPPENED: \"DRAG_HAPPENED\",\r\n  EDIT_CARD: \"EDIT_CARD\",\r\n  DELETE_CARD: \"DELETE_CARD\",\r\n  EDIT_LIST_TITLE: \"EDIT_LIST_TITLE\",\r\n  DELETE_LIST: \"DELETE_LIST\",\r\n  ADD_BOARD: \"ADD_BOARD\",\r\n  SET_CURRENT_BOARD: \"SET_CURRENT_BOARD\",\r\n};\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Button } from \"@material-ui/core\";\r\n\r\nconst StyledButton = styled(Button)`\r\n  && {\r\n    color: white;\r\n    background: #5aac44;\r\n  }\r\n`;\r\n\r\nconst KKButton = ({ text, onClick }) => {\r\n  return (\r\n    <StyledButton variant=\"contained\" onMouseDown={onClick}>\r\n      {text}\r\n    </StyledButton>\r\n  );\r\n};\r\n\r\nexport default KKButton;\r\n","import React, { useState } from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { Card, CardContent, Icon } from \"@material-ui/core\";\r\nimport { Draggable } from \"react-beautiful-dnd\";\r\nimport styled from \"styled-components\";\r\nimport KKForm from \"./kkForm\";\r\nimport { editCard, deleteCard } from \"../actions\";\r\nimport { connect } from \"react-redux\";\r\nimport KKButton from \"./kkButton\";\r\n\r\nconst CardContainer = styled.div`\r\n  margin: 0 0 8px 0;\r\n  position: relative;\r\n  max-width: 100%;\r\n  word-wrap: break-word;\r\n`;\r\n\r\nconst EditButton = styled(Icon)`\r\n  position: absolute;\r\n  display: none;\r\n  right: 5px;\r\n  top: 5px;\r\n  opacity: 0.5;\r\n  ${CardContainer}:hover & {\r\n    display: block;\r\n    cursor: pointer;\r\n  }\r\n  &:hover {\r\n    opacity: 0.8;\r\n  }\r\n`;\r\n\r\nconst DeleteButton = styled(Icon)`\r\n  position: absolute;\r\n  display: none;\r\n  right: 5px;\r\n  bottom: 5px;\r\n  opacity: 0.5;\r\n  ${CardContainer}:hover & {\r\n    display: block;\r\n    cursor: pointer;\r\n  }\r\n  &:hover {\r\n    opacity: 0.8;\r\n  }\r\n`;\r\n\r\nconst KKCard = React.memo(({ text, id, listID, index, dispatch }) => {\r\n  const [editMode, setEditMode] = useState(false);\r\n  const [cardText, setText] = useState(text);\r\n\r\n  const closeForm = (e) => {\r\n    setEditMode(false);\r\n    setText(text);\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    setText(e.target.value);\r\n  };\r\n\r\n  const saveCard = (e) => {\r\n    e.preventDefault();\r\n    dispatch(editCard(id, listID, cardText));\r\n    setEditMode(false);\r\n  };\r\n\r\n  const eraseCard = (e) => {\r\n    dispatch(deleteCard(id, listID));\r\n  };\r\n\r\n  if (editMode)\r\n    return (\r\n      <KKForm\r\n        text={cardText}\r\n        setText={setText}\r\n        closeForm={closeForm}\r\n        onChange={handleChange}\r\n      >\r\n        <KKButton text=\"Save\" onClick={saveCard}></KKButton>\r\n      </KKForm>\r\n    );\r\n\r\n  return (\r\n    <Draggable draggableId={String(id)} index={index}>\r\n      {(provided) => (\r\n        <CardContainer\r\n          ref={provided.innerRef}\r\n          {...provided.draggableProps}\r\n          {...provided.dragHandleProps}\r\n          onDoubleClick={() => setEditMode(true)}\r\n        >\r\n          <Card>\r\n            <EditButton fontSize=\"small\" onMouseDown={() => setEditMode(true)}>\r\n              edit\r\n            </EditButton>\r\n            <DeleteButton fontSize=\"small\" onMouseDown={eraseCard}>\r\n              delete\r\n            </DeleteButton>\r\n            <CardContent>\r\n              <Typography>{text}</Typography>\r\n            </CardContent>\r\n          </Card>\r\n        </CardContainer>\r\n      )}\r\n    </Draggable>\r\n  );\r\n});\r\n\r\nexport default connect()(KKCard);\r\n","import React from \"react\";\r\nimport { Icon } from \"@material-ui/core\";\r\nimport styled from \"styled-components\";\r\n\r\nconst KKAddNewButton = ({ list, onClick }) => {\r\n  const buttonText = list ? \"Add another list\" : \"Add another card\";\r\n  const buttonTextOpacity = list ? 1 : 0.5;\r\n  const buttonTextColor = list ? \"white\" : \"inherit\";\r\n  const buttonTextBackground = list ? \"rgba(0,0,0,.15)\" : \"inherit\";\r\n\r\n  const StyledAddNewButton = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    cursor: pointer;\r\n    border-radius: 3px;\r\n    height: 36px;\r\n    width: 300px;\r\n    margin-left: 8px;\r\n    padding-left: 10px;\r\n    padding-right: 10px;\r\n    opacity: ${buttonTextOpacity};\r\n    color: ${buttonTextColor};\r\n    background-color: ${buttonTextBackground};\r\n  `;\r\n\r\n  return (\r\n    <StyledAddNewButton onClick={onClick}>\r\n      <Icon>add</Icon>\r\n      <p style={{ flexShrink: 0 }}> {buttonText}</p>\r\n    </StyledAddNewButton>\r\n  );\r\n};\r\n\r\nexport default KKAddNewButton;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport KKForm from \"./kkForm\";\r\nimport KKButton from \"./kkButton\";\r\nimport KKAddNewButton from \"./kkAddNewButton\";\r\nimport { addList, addCard } from \"../actions\";\r\n\r\nclass KKCreate extends Component {\r\n  state = {\r\n    formOpen: false,\r\n    text: \"\",\r\n  };\r\n\r\n  openForm = () => {\r\n    this.setState({ formOpen: true });\r\n  };\r\n\r\n  closeForm = (e) => {\r\n    this.setState({ formOpen: false, text: \"\" });\r\n  };\r\n\r\n  handleInputChange = (e) => {\r\n    this.setState({ text: e.target.value });\r\n  };\r\n\r\n  handleAddList = () => {\r\n    const { dispatch } = this.props;\r\n    const { text } = this.state;\r\n    if (text) {\r\n      this.setState({ text: \"\" });\r\n      dispatch(addList(text));\r\n    }\r\n  };\r\n\r\n  handleAddCard = () => {\r\n    const { dispatch, listID } = this.props;\r\n    const { text } = this.state;\r\n    if (text) {\r\n      this.setState({ text: \"\" });\r\n      dispatch(addCard(listID, text));\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { text, formOpen } = this.state;\r\n    const { list } = this.props;\r\n\r\n    if (formOpen)\r\n      return (\r\n        <KKForm\r\n          text={text}\r\n          onChange={this.handleInputChange}\r\n          closeForm={this.closeForm}\r\n        >\r\n          <KKButton\r\n            text={list ? \"Add List\" : \"Add Card\"}\r\n            onClick={list ? this.handleAddList : this.handleAddCard}\r\n          ></KKButton>\r\n        </KKForm>\r\n      );\r\n    else return <KKAddNewButton list={list} onClick={this.openForm} />;\r\n  }\r\n}\r\n\r\nexport default connect()(KKCreate);\r\n","import React, { useState } from \"react\";\r\nimport KKCard from \"./kkCard\";\r\nimport KKCreate from \"./kkCreate\";\r\nimport { Droppable, Draggable } from \"react-beautiful-dnd\";\r\nimport styled from \"styled-components\";\r\nimport { connect } from \"react-redux\";\r\nimport { editListTitle, deleteList } from \"../actions\";\r\nimport { Icon } from \"@material-ui/core\";\r\n\r\nconst ListContainer = styled.div`\r\n  background-color: #dfe3e6;\r\n  border-radius: 3px;\r\n  width: 300px;\r\n  height: 100%;\r\n  padding: 8px;\r\n  margin-right: 8px;\r\n`;\r\n\r\nconst StyledInput = styled.input`\r\n  width: 100%;\r\n  border: none;\r\n  outline-color: blue;\r\n  border-radius: 3px;\r\n  margin-bottom: 3px;\r\n  padding: 5px;\r\n`;\r\n\r\nconst TitleContainer = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst ListTitle = styled.h4`\r\n  transition: background 0.3s ease-in;\r\n  ${TitleContainer}:hover & {\r\n    background: #ccc;\r\n  }\r\n`;\r\n\r\nconst DeleteButton = styled(Icon)`\r\n  display: none;\r\n  opacity: 0.5;\r\n  ${TitleContainer}:hover & {\r\n    display: block;\r\n    cursor: pointer;\r\n  }\r\n  &:hover {\r\n    opacity: 0.8;\r\n  }\r\n`;\r\n\r\nconst KKList = React.memo(({ title, cards, listID, index, dispatch }) => {\r\n  const [editMode, setEditMode] = useState(false);\r\n  const [listTitle, setListTitle] = useState(title);\r\n\r\n  const handleFocus = (e) => {\r\n    e.target.select();\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    e.preventDefault();\r\n    setListTitle(e.target.value);\r\n  };\r\n\r\n  const handleCloseEdit = (e) => {\r\n    setEditMode(false);\r\n    dispatch(editListTitle(listID, listTitle));\r\n  };\r\n\r\n  const handleDeleteList = () => {\r\n    console.log(\"KKList: delete list: \", listID);\r\n    dispatch(deleteList(listID));\r\n  };\r\n\r\n  const renderEditInput = () => {\r\n    return (\r\n      <StyledInput\r\n        type=\"text\"\r\n        value={listTitle}\r\n        onChange={handleChange}\r\n        autoFocus\r\n        onFocus={handleFocus}\r\n        onBlur={handleCloseEdit}\r\n      />\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Draggable draggableId={String(listID)} index={index}>\r\n      {(provided) => (\r\n        <ListContainer\r\n          {...provided.draggableProps}\r\n          ref={provided.innerRef}\r\n          {...provided.dragHandleProps}\r\n        >\r\n          <Droppable droppableId={String(listID)} type=\"card\">\r\n            {(provided) => (\r\n              <div>\r\n                <div>\r\n                  {editMode ? (\r\n                    renderEditInput()\r\n                  ) : (\r\n                    <TitleContainer onClick={() => setEditMode(true)}>\r\n                      <ListTitle>{listTitle}</ListTitle>\r\n                      <DeleteButton onClick={handleDeleteList}>\r\n                        delete\r\n                      </DeleteButton>\r\n                    </TitleContainer>\r\n                  )}\r\n                </div>\r\n                <div {...provided.droppableProps} ref={provided.innerRef}>\r\n                  {cards.map((card, index) => (\r\n                    <KKCard\r\n                      key={card.cardID}\r\n                      index={index}\r\n                      text={card.text}\r\n                      id={card.cardID}\r\n                      listID={listID}\r\n                    />\r\n                  ))}\r\n                  {provided.placeholder}\r\n                  <KKCreate listID={listID} />\r\n                </div>\r\n              </div>\r\n            )}\r\n          </Droppable>\r\n        </ListContainer>\r\n      )}\r\n    </Draggable>\r\n  );\r\n});\r\n\r\nexport default connect()(KKList);\r\n","import React, { Component } from \"react\";\r\nimport KKList from \"./kkList\";\r\nimport { connect } from \"react-redux\";\r\nimport { DragDropContext, Droppable } from \"react-beautiful-dnd\";\r\nimport { sort, setCurrentBoard } from \"../actions\";\r\nimport styled from \"styled-components\";\r\nimport KKCreate from \"./kkCreate\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst ListContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n`;\r\n\r\nclass KKBoard extends Component {\r\n  componentDidMount() {\r\n    const { boardID } = this.props.match.params;\r\n    console.log(\"Board: CDM\", boardID);\r\n    this.props.dispatch(setCurrentBoard(boardID));\r\n  }\r\n\r\n  onDragEnd = (result) => {\r\n    const { destination, source, draggableId, type } = result;\r\n    if (!destination) return;\r\n    this.props.dispatch(\r\n      sort(\r\n        source.droppableId,\r\n        destination.droppableId,\r\n        source.index,\r\n        destination.index,\r\n        draggableId,\r\n        type\r\n      )\r\n    );\r\n  };\r\n\r\n  render() {\r\n    console.log(\"Board params.boardid: \", this.props.match.params.boardID);\r\n    const { lists, cards, match, boards } = this.props;\r\n    const { boardID } = match.params;\r\n    const board = boards[boardID];\r\n    if (!board)\r\n      return <h1 style={{ textAlign: \"center\" }}>Board not found!</h1>;\r\n\r\n    const listOrder = board.lists;\r\n\r\n    return (\r\n      <DragDropContext onDragEnd={this.onDragEnd}>\r\n        <Link to=\"/\">Home</Link>\r\n        <h1 style={{ textAlign: \"center\" }}>{board.boardTitle}</h1>\r\n        <Droppable droppableId=\"all-lists\" direction=\"horizontal\" type=\"list\">\r\n          {(provided) => (\r\n            <ListContainer {...provided.droppableProps} ref={provided.innerRef}>\r\n              {listOrder.map((listID, index) => {\r\n                const list = lists[listID];\r\n                if (list) {\r\n                  const listCards = list.cards.map((cardID) => cards[cardID]);\r\n                  return (\r\n                    <KKList\r\n                      key={list.listID}\r\n                      listID={list.listID}\r\n                      title={list.listTitle}\r\n                      cards={listCards}\r\n                      index={index}\r\n                    />\r\n                  );\r\n                }\r\n              })}\r\n              {provided.placeholder}\r\n              <KKCreate list />\r\n            </ListContainer>\r\n          )}\r\n        </Droppable>\r\n      </DragDropContext>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  boards: state.boards,\r\n  lists: state.lists,\r\n  cards: state.cards,\r\n});\r\n\r\nexport default connect(mapStateToProps)(KKBoard);\r\n","import { CONSTANTS } from \"./index\";\r\nimport uuid from \"react-uuid\";\r\n\r\nexport const addBoard = (boardTitle) => {\r\n  return {\r\n    type: CONSTANTS.ADD_BOARD,\r\n    payload: {\r\n      boardTitle,\r\n      boardID: uuid(),\r\n    },\r\n  };\r\n};\r\n\r\nexport const setCurrentBoard = (boardID) => {\r\n  return {\r\n    type: CONSTANTS.SET_CURRENT_BOARD,\r\n    payload: {\r\n      boardID,\r\n    },\r\n  };\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { addBoard } from \"../actions\";\r\nimport styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst HomeContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  box-sizing: border-box;\r\n`;\r\n\r\nconst Thumbnails = styled.div`\r\n  flex: 1;\r\n  height: 50%;\r\n  margin: 0 auto;\r\n  display: flex;\r\n  flex-direction: row;\r\n  flex-wrap: wrap;\r\n  justify-content: center;\r\n`;\r\n\r\nconst Thumbnail = styled.div`\r\n  height: 280px;\r\n  width: 280px;\r\n  background: grey;\r\n  padding: 10px;\r\n  margin: 8px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  cursor: pointer;\r\n  border-radius: 3px;\r\n  box-shadow: 0 2px 4px grey;\r\n`;\r\n\r\nconst Title = styled.h4`\r\n  color: white;\r\n  text-decoration: none;\r\n`;\r\n\r\nconst CreateTitle = styled.h3`\r\n  font-size: 48px;\r\n  color: white;\r\n  font-weight: bold;\r\n  font-family: Arial, Helvetica, sans-serif;\r\n`;\r\n\r\nconst CreateInput = styled.input`\r\n  width: 400px;\r\n  height: 80px;\r\n  font-size: 22px;\r\n  padding: 10px;\r\n  box-sizing: border-box;\r\n  border-radius: 3px;\r\n  border: none;\r\n  outline-color: blue;\r\n  box-shadow: 0 2px 4px grey;\r\n  align-self: center;\r\n`;\r\n\r\nconst Home = ({ boards, dispatch, match }) => {\r\n  console.log(\"Home: \", match.params);\r\n  const [newBoardTitle, setNewBoardTitle] = useState(\"\");\r\n\r\n  const handleChange = (e) => {\r\n    setNewBoardTitle(e.target.value);\r\n  };\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    dispatch(addBoard(newBoardTitle));\r\n  };\r\n\r\n  const renderAllBoards = () => {\r\n    console.log(\"Home: Obj:\", boards);\r\n    console.log(\"Home: ara:\", Object.entries(boards));\r\n    return Object.entries(boards).map(([boardID, board]) => {\r\n      return (\r\n        <Link\r\n          key={boardID}\r\n          to={`/${boardID}`}\r\n          style={{ textDecoration: \"none\" }}\r\n        >\r\n          <Thumbnail>\r\n            <Title>{board.boardTitle}</Title>\r\n          </Thumbnail>\r\n        </Link>\r\n      );\r\n    });\r\n  };\r\n\r\n  const renderCreateNewBoard = () => {\r\n    return (\r\n      <form onSubmit={handleSubmit} style={{ textAlign: \"center\" }}>\r\n        <CreateTitle>Create new Board</CreateTitle>\r\n        <CreateInput\r\n          onChange={handleChange}\r\n          value={newBoardTitle}\r\n          placeholder={\"Enter title and Hit enter\"}\r\n          type=\"text\"\r\n        />\r\n      </form>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <HomeContainer>\r\n      <Thumbnails>{renderAllBoards()}</Thumbnails>\r\n      {renderCreateNewBoard()}\r\n    </HomeContainer>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  boards: state.boards,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Home);\r\n","import React, { Component } from \"react\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport KKBoard from \"./kkBoard\";\r\nimport Home from \"./home\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Switch>\r\n          <Route path=\"/:boardID\" component={KKBoard} />\r\n          <Route path=\"/\" component={Home} />\r\n        </Switch>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { CONSTANTS } from \"../actions\";\r\n\r\nconst initialState = {\r\n  \"board-00\": {\r\n    id: \"board-00\",\r\n    lists: [\"list-00\"],\r\n    boardTitle: \"dev board\",\r\n  },\r\n};\r\n\r\nconst boardReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case CONSTANTS.ADD_BOARD: {\r\n      const { boardTitle, boardID } = action.payload;\r\n      const newBoard = {\r\n        boardID,\r\n        boardTitle,\r\n        lists: [],\r\n      };\r\n      return { ...state, [boardID]: newBoard };\r\n    }\r\n\r\n    //TODO: case CONSTANTS.DELETE_BOARD:\r\n\r\n    // rename board\r\n\r\n    case CONSTANTS.ADD_LIST: {\r\n      const { boardID, listID } = action.payload;\r\n      const board = state[boardID];\r\n      board.lists.push(listID);\r\n      return { ...state, [boardID]: board };\r\n    }\r\n\r\n    case CONSTANTS.DELETE_LIST: {\r\n      const { boardID, listID } = action.payload;\r\n      console.log(\"Board Reducer: delete list: \", listID, boardID);\r\n      const board = state[boardID];\r\n      const newLists = board.lists.filter((id) => id != listID);\r\n      board.lists = newLists;\r\n      return { ...state, [boardID]: board };\r\n    }\r\n\r\n    case CONSTANTS.DRAG_HAPPENED: {\r\n      const {\r\n        boardID,\r\n        type,\r\n        droppableIndexStart,\r\n        droppableIndexEnd,\r\n      } = action.payload;\r\n      if (type !== \"list\") return state;\r\n      const board = state[boardID];\r\n      const lists = board.lists;\r\n      const draggedList = lists.splice(droppableIndexStart, 1);\r\n      lists.splice(droppableIndexEnd, 0, ...draggedList);\r\n      board.lists = lists;\r\n      return { ...state, [boardID]: board };\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default boardReducer;\r\n","import { CONSTANTS } from \"../actions\";\r\n\r\nconst currentBoardReducer = (state = null, action) => {\r\n  switch (action.type) {\r\n    case CONSTANTS.SET_CURRENT_BOARD: {\r\n      return action.payload;\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default currentBoardReducer;\r\n","import { CONSTANTS } from \"./../actions/index\";\r\n\r\nlet listID = 2,\r\n  cardID = 6;\r\n\r\nconst initialState = {\r\n  \"list-00\": {\r\n    listID: \"list-00\",\r\n    cards: [\"card-00\"],\r\n    listTitle: \"myList\",\r\n    boardID: \"board-00\",\r\n  },\r\n};\r\n\r\nconst listReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case CONSTANTS.ADD_LIST: {\r\n      const { listTitle, listID, boardID } = action.payload;\r\n      const newList = {\r\n        listTitle,\r\n        listID,\r\n        cards: [],\r\n        boardID,\r\n      };\r\n      return { ...state, [listID]: newList };\r\n    }\r\n\r\n    case CONSTANTS.EDIT_LIST_TITLE: {\r\n      const { listID, newListTitle } = action.payload;\r\n      const list = state[listID];\r\n      list.title = newListTitle;\r\n      return { ...state, [listID]: list };\r\n    }\r\n\r\n    case CONSTANTS.DELETE_LIST: {\r\n      const { listID, boardID } = action.payload;\r\n      console.log(\"ListReducer: delete list: \", listID);\r\n      const newState = state;\r\n      delete newState[listID];\r\n      return newState;\r\n    }\r\n\r\n    case CONSTANTS.ADD_CARD: {\r\n      const { listID, cardID } = action.payload;\r\n      const list = state[listID];\r\n      list.cards.push(cardID);\r\n      return { ...state, [listID]: list };\r\n    }\r\n\r\n    case CONSTANTS.DELETE_CARD: {\r\n      const { cardID, listID } = action.payload;\r\n      const list = state[listID];\r\n      const newCards = list.cards.filter((id) => id !== cardID);\r\n      list.cards = newCards;\r\n      return { ...state, [listID]: list };\r\n    }\r\n\r\n    case CONSTANTS.DRAG_HAPPENED: {\r\n      const {\r\n        droppableIdStart,\r\n        droppableIdEnd,\r\n        droppableIndexStart,\r\n        droppableIndexEnd,\r\n        draggableId,\r\n        type,\r\n      } = action.payload;\r\n\r\n      if (type === \"list\") {\r\n        return state;\r\n      }\r\n\r\n      // in the same list\r\n      if (droppableIdStart === droppableIdEnd) {\r\n        const list = state[droppableIdStart];\r\n        const card = list.cards.splice(droppableIndexStart, 1);\r\n        list.cards.splice(droppableIndexEnd, 0, ...card);\r\n        return { ...state, [droppableIdStart]: list };\r\n      } else {\r\n        const startList = state[droppableIdStart];\r\n        const card = startList.cards.splice(droppableIndexStart, 1);\r\n        const endList = state[droppableIdEnd];\r\n        endList.cards.splice(droppableIndexEnd, 0, ...card);\r\n        return {\r\n          ...state,\r\n          [droppableIdStart]: startList,\r\n          [droppableIdEnd]: endList,\r\n        };\r\n      }\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default listReducer;\r\n","import { CONSTANTS } from \"../actions\";\r\n\r\nconst initialState = {\r\n  \"card-00\": {\r\n    text: \"Dev Card\",\r\n    id: \"card-00\",\r\n    listID: \"list-00\",\r\n  },\r\n};\r\n\r\nconst cardReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case CONSTANTS.ADD_CARD: {\r\n      const { text, listID, cardID } = action.payload;\r\n      const newCard = {\r\n        text,\r\n        cardID,\r\n        listID,\r\n      };\r\n      return { ...state, [cardID]: newCard };\r\n    }\r\n\r\n    case CONSTANTS.EDIT_CARD: {\r\n      const { cardID, newText } = action.payload;\r\n      const card = state[cardID];\r\n      card.text = newText;\r\n      return { ...state, [cardID]: card };\r\n    }\r\n\r\n    case CONSTANTS.DELETE_CARD: {\r\n      const { cardID } = action.payload;\r\n      const newState = state;\r\n      delete newState[cardID];\r\n      return newState;\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default cardReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport boardReducer from \"./boardReducer\";\r\nimport currentBoardReducer from \"./currentBoardReducer\";\r\nimport listReducer from \"./listReducer\";\r\nimport cardReducer from \"./cardReducer\";\r\n\r\nexport default combineReducers({\r\n  boards: boardReducer,\r\n  currentBoard: currentBoardReducer,\r\n  lists: listReducer,\r\n  cards: cardReducer,\r\n});\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"../reducers\";\r\nimport { persistStore, persistReducer } from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\n\r\nconst persistConfig = {\r\n  key: \"root\",\r\n  storage,\r\n};\r\n\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\r\n\r\nexport default () => {\r\n  let store = createStore(persistedReducer, applyMiddleware(thunk));\r\n  let persistor = persistStore(store);\r\n  return { store, persistor };\r\n};\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport App from \"./components/App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport Store from \"./store\";\r\nimport { createGlobalStyle } from \"styled-components\";\r\nimport \"./index.css\";\r\nimport $ from \"jquery\";\r\nimport { PersistGate } from \"redux-persist/integration/react\";\r\nimport { HashRouter } from \"react-router-dom\";\r\n\r\nconst { persistor, store } = Store();\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  html {\r\n    background-color: crimson;\r\n    box-sizing: border-box;\r\n  }\r\n`;\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <PersistGate loading={null} persistor={persistor}>\r\n      <GlobalStyle />\r\n      <HashRouter>\r\n        <App />\r\n      </HashRouter>\r\n    </PersistGate>\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n$(document).bind(\"DOMNodeRemoved\", function (e) {\r\n  console.log(\"Removed: \", e.target.title.nodeName);\r\n});\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}