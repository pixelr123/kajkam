{"version":3,"sources":["components/kkForm.js","actions/KKListActions.js","actions/KKCardActions.js","actions/index.js","components/kkButton.js","components/kkCard.js","components/kkAddNewButton.js","components/kkCreate.js","components/kkList.js","components/App.js","serviceWorker.js","reducers/listReducer.js","reducers/index.js","store/index.js","index.js"],"names":["Container","styled","div","StyledCard","Card","StyledTextarea","Textarea","ButtonContainer","StyledIcon","Icon","KKForm","React","memo","list","text","onChange","closeForm","children","placeholder","autoFocus","onBlur","value","e","onMouseDown","addList","title","type","CONSTANTS","ADD_LIST","payload","sort","droppableIdStart","droppableIdEnd","droppableIndexStart","droppableIndexEnd","draggableId","DRAG_HAPPENED","addCard","listID","ADD_CARD","EDIT_CARD","DELETE_CARD","EDIT_LIST_TITLE","DELETE_LIST","StyledButton","Button","KKButton","onClick","variant","CardContainer","EditButton","DeleteButton","KKCard","id","index","dispatch","useState","editMode","setEditMode","cardText","setText","eraseCard","console","log","deleteCard","target","preventDefault","newText","editCard","String","provided","ref","innerRef","draggableProps","dragHandleProps","fontSize","CardContent","Typography","gutterBottom","connect","KKAddNewButton","buttonText","buttonTextOpacity","buttonTextColor","buttonTextBackground","StyledAddNewButton","style","flexShrink","KKCreate","state","formOpen","openForm","setState","handleInputChange","handleAddList","props","handleAddCard","this","Component","ListContainer","StyledInput","input","TitleContainer","ListTitle","h4","KKList","cards","listTitle","setListTitle","handleFocus","select","handleChange","handleCloseEdit","newTitle","editListTitle","handleDeleteList","deleteList","droppableId","droppableProps","onFocus","map","card","key","App","onDragEnd","result","destination","source","lists","direction","Boolean","window","location","hostname","match","cardID","initialState","listReducer","action","newList","newCard","newState","splice","find","startList","endList","newCards","filter","combineReducers","persistConfig","storage","persistedReducer","persistReducer","rootReducer","store","createStore","persistor","persistStore","Store","GlobalStyle","createGlobalStyle","ReactDOM","render","loading","document","getElementById","$","bind","nodeName","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.30365615.chunk.js","sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Card, Button, Icon } from \"@material-ui/core\";\r\nimport Textarea from \"react-textarea-autosize\";\r\n\r\nconst Container = styled.div`\r\n  width: 284px;\r\n  margin-bottom: 8px;\r\n`;\r\n\r\nconst StyledCard = styled(Card)`\r\n  min-height: 85px;\r\n  padding: 6px 8px 2px;\r\n`;\r\n\r\nconst StyledTextarea = styled(Textarea)`\r\n  resize: none;\r\n  width: 100%;\r\n  overflow: hidden;\r\n  outline: none;\r\n  border: none;\r\n`;\r\n\r\nconst ButtonContainer = styled.div`\r\n  margin-top: 8px;\r\n  display: flex;\r\n  align-items: center;\r\n  margin-left: 8px;\r\n`;\r\n\r\nconst StyledIcon = styled(Icon)`\r\n  margin-left: 8px;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst KKForm = React.memo(\r\n  ({ list, text = \"\", onChange, closeForm, children }) => {\r\n    const placeholder = list\r\n      ? \"Enter list title...\"\r\n      : \"Enter a title for this card...\";\r\n\r\n    return (\r\n      <Container>\r\n        <StyledCard>\r\n          <StyledTextarea\r\n            placeholder={placeholder}\r\n            autoFocus\r\n            onBlur={closeForm}\r\n            value={text}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n        </StyledCard>\r\n        <ButtonContainer>\r\n          {children}\r\n          <StyledIcon onMouseDown={closeForm}>close</StyledIcon>\r\n        </ButtonContainer>\r\n      </Container>\r\n    );\r\n  }\r\n);\r\n\r\nexport default KKForm;\r\n","import { CONSTANTS } from \"./index\";\r\n\r\nexport const addList = (title) => {\r\n  return {\r\n    type: CONSTANTS.ADD_LIST,\r\n    payload: title,\r\n  };\r\n};\r\n\r\nexport const editListTitle = (listID, newTitle) => {\r\n  return {\r\n    type: CONSTANTS.EDIT_LIST_TITLE,\r\n    payload: {\r\n      listID,\r\n      newTitle,\r\n    },\r\n  };\r\n};\r\n\r\nexport const deleteList = (listID) => {\r\n  return {\r\n    type: CONSTANTS.DELETE_LIST,\r\n    payload: {\r\n      listID,\r\n    },\r\n  };\r\n};\r\n\r\nexport const sort = (\r\n  droppableIdStart,\r\n  droppableIdEnd,\r\n  droppableIndexStart,\r\n  droppableIndexEnd,\r\n  draggableId,\r\n  type\r\n) => {\r\n  return {\r\n    type: CONSTANTS.DRAG_HAPPENED,\r\n    payload: {\r\n      droppableIdStart,\r\n      droppableIdEnd,\r\n      droppableIndexStart,\r\n      droppableIndexEnd,\r\n      draggableId,\r\n      type,\r\n    },\r\n  };\r\n};\r\n","import { CONSTANTS } from \"./index\";\r\n\r\nexport const addCard = (listID, text) => {\r\n  return {\r\n    type: CONSTANTS.ADD_CARD,\r\n    payload: { text, listID },\r\n  };\r\n};\r\n\r\nexport const editCard = (id, listID, newText) => {\r\n  return {\r\n    type: CONSTANTS.EDIT_CARD,\r\n    payload: { id, listID, newText },\r\n  };\r\n};\r\n\r\nexport const deleteCard = (id, listID) => {\r\n  return {\r\n    type: CONSTANTS.DELETE_CARD,\r\n    payload: { id, listID },\r\n  };\r\n};\r\n","export * from \"./KKListActions\";\r\nexport * from \"./KKCardActions\";\r\n\r\nexport const CONSTANTS = {\r\n  ADD_CARD: \"ADD_CARD\",\r\n  ADD_LIST: \"ADD_LIST\",\r\n  DRAG_HAPPENED: \"DRAG_HAPPENED\",\r\n  EDIT_CARD: \"EDIT_CARD\",\r\n  DELETE_CARD: \"DELETE_CARD\",\r\n  EDIT_LIST_TITLE: \"EDIT_LIST_TITLE\",\r\n  DELETE_LIST: \"DELETE_LIST\",\r\n};\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Button } from \"@material-ui/core\";\r\n\r\nconst StyledButton = styled(Button)`\r\n  && {\r\n    color: white;\r\n    background: #5aac44;\r\n  }\r\n`;\r\n\r\nconst KKButton = ({ text, onClick }) => {\r\n  return (\r\n    <StyledButton variant=\"contained\" onMouseDown={onClick}>\r\n      {text}\r\n    </StyledButton>\r\n  );\r\n};\r\n\r\nexport default KKButton;\r\n","import React, { useState } from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { Card, CardContent, Icon } from \"@material-ui/core\";\r\nimport { Draggable } from \"react-beautiful-dnd\";\r\nimport styled from \"styled-components\";\r\nimport KKForm from \"./kkForm\";\r\nimport { editCard, deleteCard } from \"../actions\";\r\nimport { connect } from \"react-redux\";\r\nimport KKButton from \"./kkButton\";\r\n\r\nconst CardContainer = styled.div`\r\n  margin: 0 0 8px 0;\r\n  position: relative;\r\n  max-width: 100%;\r\n  word-wrap: break-word;\r\n`;\r\n\r\nconst EditButton = styled(Icon)`\r\n  position: absolute;\r\n  display: none;\r\n  right: 5px;\r\n  top: 5px;\r\n  opacity: 0.5;\r\n  ${CardContainer}:hover & {\r\n    display: block;\r\n    cursor: pointer;\r\n  }\r\n  &:hover {\r\n    opacity: 0.8;\r\n  }\r\n`;\r\n\r\nconst DeleteButton = styled(Icon)`\r\n  position: absolute;\r\n  display: none;\r\n  right: 5px;\r\n  bottom: 5px;\r\n  opacity: 0.5;\r\n  ${CardContainer}:hover & {\r\n    display: block;\r\n    cursor: pointer;\r\n  }\r\n  &:hover {\r\n    opacity: 0.8;\r\n  }\r\n`;\r\n\r\nconst KKCard = React.memo(({ text, id, listID, index, dispatch }) => {\r\n  const [editMode, setEditMode] = useState(false);\r\n  const [cardText, setText] = useState(text);\r\n\r\n  const closeForm = (e) => {\r\n    setEditMode(false);\r\n    setText(text);\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    setText(e.target.value);\r\n  };\r\n\r\n  const saveCard = (e) => {\r\n    e.preventDefault();\r\n    dispatch(editCard(id, listID, cardText));\r\n    setEditMode(false);\r\n  };\r\n\r\n  const eraseCard = (e) => {\r\n    console.log(\"Erase\");\r\n    dispatch(deleteCard(id, listID));\r\n  };\r\n\r\n  if (editMode)\r\n    return (\r\n      <KKForm\r\n        text={cardText}\r\n        setText={setText}\r\n        closeForm={closeForm}\r\n        onChange={handleChange}\r\n      >\r\n        <KKButton text=\"Save\" onClick={saveCard}></KKButton>\r\n      </KKForm>\r\n    );\r\n\r\n  return (\r\n    <Draggable draggableId={String(id)} index={index}>\r\n      {(provided) => (\r\n        <CardContainer\r\n          ref={provided.innerRef}\r\n          {...provided.draggableProps}\r\n          {...provided.dragHandleProps}\r\n        >\r\n          <Card>\r\n            <EditButton fontSize=\"small\" onMouseDown={() => setEditMode(true)}>\r\n              edit\r\n            </EditButton>\r\n            <DeleteButton fontSize=\"small\" onMouseDown={eraseCard}>\r\n              delete\r\n            </DeleteButton>\r\n            <CardContent>\r\n              <Typography gutterBottom>{text}</Typography>\r\n            </CardContent>\r\n          </Card>\r\n        </CardContainer>\r\n      )}\r\n    </Draggable>\r\n  );\r\n});\r\n\r\nexport default connect()(KKCard);\r\n","import React from \"react\";\r\nimport { Icon } from \"@material-ui/core\";\r\nimport styled from \"styled-components\";\r\n\r\nconst KKAddNewButton = ({ list, onClick }) => {\r\n  const buttonText = list ? \"Add another list\" : \"Add another card\";\r\n  const buttonTextOpacity = list ? 1 : 0.5;\r\n  const buttonTextColor = list ? \"white\" : \"inherit\";\r\n  const buttonTextBackground = list ? \"rgba(0,0,0,.15)\" : \"inherit\";\r\n\r\n  const StyledAddNewButton = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    cursor: pointer;\r\n    border-radius: 3px;\r\n    height: 36px;\r\n    width: 300px;\r\n    margin-left: 8px;\r\n    padding-left: 10px;\r\n    padding-right: 10px;\r\n    opacity: ${buttonTextOpacity};\r\n    color: ${buttonTextColor};\r\n    background-color: ${buttonTextBackground};\r\n  `;\r\n\r\n  return (\r\n    <StyledAddNewButton onClick={onClick}>\r\n      <Icon>add</Icon>\r\n      <p style={{ flexShrink: 0 }}> {buttonText}</p>\r\n    </StyledAddNewButton>\r\n  );\r\n};\r\n\r\nexport default KKAddNewButton;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport KKForm from \"./kkForm\";\r\nimport KKButton from \"./kkButton\";\r\nimport KKAddNewButton from \"./kkAddNewButton\";\r\nimport { addList } from \"./../actions/KKListActions\";\r\nimport { addCard } from \"./../actions/KKCardActions\";\r\n\r\nclass KKCreate extends Component {\r\n  state = {\r\n    formOpen: false,\r\n    text: \"\",\r\n  };\r\n\r\n  openForm = () => {\r\n    this.setState({ formOpen: true });\r\n  };\r\n\r\n  closeForm = (e) => {\r\n    this.setState({ formOpen: false, text: \"\" });\r\n  };\r\n\r\n  handleInputChange = (e) => {\r\n    this.setState({ text: e.target.value });\r\n  };\r\n\r\n  handleAddList = () => {\r\n    const { dispatch } = this.props;\r\n    const { text } = this.state;\r\n    if (text) {\r\n      this.setState({ text: \"\" });\r\n      dispatch(addList(text));\r\n    }\r\n  };\r\n\r\n  handleAddCard = () => {\r\n    const { dispatch, listID } = this.props;\r\n    const { text } = this.state;\r\n    if (text) {\r\n      this.setState({ text: \"\" });\r\n      dispatch(addCard(listID, text));\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { text, formOpen } = this.state;\r\n    const { list } = this.props;\r\n\r\n    if (formOpen)\r\n      return (\r\n        <KKForm\r\n          text={text}\r\n          onChange={this.handleInputChange}\r\n          closeForm={this.closeForm}\r\n        >\r\n          <KKButton\r\n            text={list ? \"Add List\" : \"Add Card\"}\r\n            onClick={list ? this.handleAddList : this.handleAddCard}\r\n          ></KKButton>\r\n        </KKForm>\r\n      );\r\n    else return <KKAddNewButton list={list} onClick={this.openForm} />;\r\n  }\r\n}\r\n\r\nexport default connect()(KKCreate);\r\n","import React, { useState } from \"react\";\r\nimport KKCard from \"./kkCard\";\r\nimport KKCreate from \"./kkCreate\";\r\nimport { Droppable, Draggable } from \"react-beautiful-dnd\";\r\nimport styled from \"styled-components\";\r\nimport { connect } from \"react-redux\";\r\nimport { editListTitle, deleteList } from \"../actions\";\r\nimport { Icon } from \"@material-ui/core\";\r\n\r\nconst ListContainer = styled.div`\r\n  background-color: #dfe3e6;\r\n  border-radius: 3px;\r\n  width: 300px;\r\n  height: 100%;\r\n  padding: 8px;\r\n  margin-right: 8px;\r\n`;\r\n\r\nconst StyledInput = styled.input`\r\n  width: 100%;\r\n  border: none;\r\n  outline-color: blue;\r\n  border-radius: 3px;\r\n  margin-bottom: 3px;\r\n  padding: 5px;\r\n`;\r\n\r\nconst TitleContainer = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst ListTitle = styled.h4`\r\n  transition: background 0.3s ease-in;\r\n  ${TitleContainer}:hover & {\r\n    background: #ccc;\r\n  }\r\n`;\r\n\r\nconst DeleteButton = styled(Icon)`\r\n  display: none;\r\n  opacity: 0.5;\r\n  ${TitleContainer}:hover & {\r\n    display: block;\r\n    cursor: pointer;\r\n  }\r\n  &:hover {\r\n    opacity: 0.8;\r\n  }\r\n`;\r\n\r\nconst KKList = React.memo(({ title, cards, listID, index, dispatch }) => {\r\n  const [editMode, setEditMode] = useState(false);\r\n  const [listTitle, setListTitle] = useState(title);\r\n\r\n  const handleFocus = (e) => {\r\n    e.target.select();\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    e.preventDefault();\r\n    setListTitle(e.target.value);\r\n  };\r\n\r\n  const handleCloseEdit = (e) => {\r\n    setEditMode(false);\r\n    dispatch(editListTitle(listID, listTitle));\r\n  };\r\n\r\n  const handleDeleteList = () => {\r\n    dispatch(deleteList(listID));\r\n  };\r\n\r\n  const renderEditInput = () => {\r\n    return (\r\n      <StyledInput\r\n        type=\"text\"\r\n        value={listTitle}\r\n        onChange={handleChange}\r\n        autoFocus\r\n        onFocus={handleFocus}\r\n        onBlur={handleCloseEdit}\r\n      />\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Draggable draggableId={String(listID)} index={index}>\r\n      {(provided) => (\r\n        <ListContainer\r\n          {...provided.draggableProps}\r\n          ref={provided.innerRef}\r\n          {...provided.dragHandleProps}\r\n        >\r\n          <Droppable droppableId={String(listID)}>\r\n            {(provided) => (\r\n              <div {...provided.droppableProps} ref={provided.innerRef}>\r\n                {editMode ? (\r\n                  renderEditInput()\r\n                ) : (\r\n                  <TitleContainer onClick={() => setEditMode(true)}>\r\n                    <ListTitle>{listTitle}</ListTitle>\r\n                    <DeleteButton onClick={handleDeleteList}>\r\n                      delete\r\n                    </DeleteButton>\r\n                  </TitleContainer>\r\n                )}\r\n                {cards.map((card, index) => (\r\n                  <KKCard\r\n                    key={card.id}\r\n                    index={index}\r\n                    text={card.text}\r\n                    id={card.id}\r\n                    listID={listID}\r\n                  />\r\n                ))}\r\n                {provided.placeholder}\r\n                <KKCreate listID={listID} />\r\n              </div>\r\n            )}\r\n          </Droppable>\r\n        </ListContainer>\r\n      )}\r\n    </Draggable>\r\n  );\r\n});\r\n\r\nexport default connect()(KKList);\r\n","import React, { Component } from \"react\";\r\nimport KKList from \"./kkList\";\r\nimport { connect } from \"react-redux\";\r\nimport { DragDropContext, Droppable } from \"react-beautiful-dnd\";\r\nimport { sort } from \"../actions\";\r\nimport styled from \"styled-components\";\r\nimport KKCreate from \"./kkCreate\";\r\n\r\nconst ListContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n`;\r\n\r\nclass App extends Component {\r\n  onDragEnd = (result) => {\r\n    const { destination, source, draggableId, type } = result;\r\n    if (!destination) return;\r\n    this.props.dispatch(\r\n      sort(\r\n        source.droppableId,\r\n        destination.droppableId,\r\n        source.index,\r\n        destination.index,\r\n        draggableId,\r\n        type\r\n      )\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { lists } = this.props;\r\n    return (\r\n      <DragDropContext onDragEnd={this.onDragEnd}>\r\n        <h2>Hello World</h2>\r\n        <Droppable droppableId=\"all-lists\" direction=\"horizontal\" type=\"list\">\r\n          {(provided) => (\r\n            <ListContainer {...provided.droppableProps} ref={provided.innerRef}>\r\n              {lists.map((list, index) => (\r\n                <KKList\r\n                  key={list.id}\r\n                  listID={list.id}\r\n                  title={list.title}\r\n                  cards={list.cards}\r\n                  index={index}\r\n                />\r\n              ))}\r\n              {provided.placeholder}\r\n              <KKCreate list />\r\n            </ListContainer>\r\n          )}\r\n        </Droppable>\r\n      </DragDropContext>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  lists: state.lists,\r\n});\r\n\r\nexport default connect(mapStateToProps)(App);\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { CONSTANTS } from \"./../actions/index\";\r\n\r\nlet listID = 2,\r\n  cardID = 6;\r\n\r\nconst initialState = [\r\n  {\r\n    title: \"Learn ReactJS\",\r\n    id: `list-${0}`,\r\n    cards: [\r\n      {\r\n        id: `card-${0}`,\r\n        text: \"Learn reactJS from Code With Mosh and make small projects.\",\r\n      },\r\n      {\r\n        id: `card-${1}`,\r\n        text: \"Make a simple TODO list App\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    title: \"Make a Trello like app\",\r\n    id: `list-${1}`,\r\n    cards: [\r\n      {\r\n        id: `card-${2}`,\r\n        text: \"Learn DND.\",\r\n      },\r\n      {\r\n        id: `card-${3}`,\r\n        text: \"Learn material UI\",\r\n      },\r\n      {\r\n        id: `card-${4}`,\r\n        text: \"Make project with help from youtube\",\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\nconst listReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case CONSTANTS.ADD_LIST:\r\n      const newList = {\r\n        title: action.payload,\r\n        cards: [],\r\n        id: `list-${listID++}`,\r\n      };\r\n      return [...state, newList];\r\n\r\n    case CONSTANTS.ADD_CARD: {\r\n      const newCard = {\r\n        id: `card-${cardID++}`,\r\n        text: action.payload.text,\r\n      };\r\n\r\n      const newState = state.map((list) => {\r\n        if (list.id === action.payload.listID)\r\n          return {\r\n            ...list,\r\n            cards: [...list.cards, newCard],\r\n          };\r\n        else return list;\r\n      });\r\n      return newState;\r\n    }\r\n\r\n    case CONSTANTS.DRAG_HAPPENED:\r\n      const {\r\n        droppableIdStart,\r\n        droppableIdEnd,\r\n        droppableIndexStart,\r\n        droppableIndexEnd,\r\n        draggableId,\r\n        type,\r\n      } = action.payload;\r\n      const newState = [...state];\r\n\r\n      if (type === \"list\") {\r\n        const list = newState.splice(droppableIndexStart, 1);\r\n        newState.splice(droppableIndexEnd, 0, ...list);\r\n        return newState;\r\n      }\r\n\r\n      // in the same list\r\n      if (droppableIdStart === droppableIdEnd) {\r\n        const list = state.find((list) => droppableIdStart === list.id);\r\n        const card = list.cards.splice(droppableIndexStart, 1);\r\n        list.cards.splice(droppableIndexEnd, 0, ...card);\r\n      } else {\r\n        const startList = state.find((list) => droppableIdStart === list.id);\r\n        const card = startList.cards.splice(droppableIndexStart, 1);\r\n        const endList = state.find((list) => droppableIdEnd === list.id);\r\n        endList.cards.splice(droppableIndexEnd, 0, ...card);\r\n      }\r\n      return newState;\r\n\r\n    case CONSTANTS.EDIT_CARD: {\r\n      const { id, listID, newText } = action.payload;\r\n      return state.map((list) => {\r\n        if (list.id === listID) {\r\n          const newCards = list.cards.map((card) => {\r\n            if (card.id === id) {\r\n              card.text = newText;\r\n              return card;\r\n            } else return card;\r\n          });\r\n          return { ...list, cards: newCards };\r\n        } else return list;\r\n      });\r\n    }\r\n\r\n    case CONSTANTS.DELETE_CARD: {\r\n      const { id, listID } = action.payload;\r\n      return state.map((list) => {\r\n        if (list.id === listID) {\r\n          const newCards = list.cards.filter((card) => card.id !== id);\r\n          return { ...list, cards: newCards };\r\n        } else return list;\r\n      });\r\n    }\r\n\r\n    case CONSTANTS.EDIT_LIST_TITLE: {\r\n      const { listID, newTitle } = action.payload;\r\n      return state.map((list) => {\r\n        if (list.id === listID) {\r\n          list.title = newTitle;\r\n          return list;\r\n        } else return list;\r\n      });\r\n    }\r\n\r\n    case CONSTANTS.DELETE_LIST: {\r\n      const { listID } = action.payload;\r\n      return state.filter((list) => list.id !== listID);\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default listReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport listReducer from \"./listReducer\";\r\n\r\nexport default combineReducers({\r\n  lists: listReducer,\r\n});\r\n","import { createStore } from \"redux\";\r\nimport rootReducer from \"../reducers\";\r\nimport { persistStore, persistReducer } from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\n\r\nconst persistConfig = {\r\n  key: \"root\",\r\n  storage,\r\n};\r\n\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\r\n\r\nexport default () => {\r\n  let store = createStore(persistedReducer);\r\n  let persistor = persistStore(store);\r\n  return { store, persistor };\r\n};\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport Store from \"./store\";\nimport { createGlobalStyle } from \"styled-components\";\nimport \"./index.css\";\nimport $ from \"jquery\";\nimport { PersistGate } from \"redux-persist/integration/react\";\n\nconst { persistor, store } = Store();\n\nconst GlobalStyle = createGlobalStyle`\n  html {\n    background-color: crimson;\n    box-sizing: border-box;\n  }\n`;\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <GlobalStyle />\n      <App />\n    </PersistGate>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n$(document).bind(\"DOMNodeRemoved\", function (e) {\n  console.log(\"Removed: \", e.target.title.nodeName);\n});\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}