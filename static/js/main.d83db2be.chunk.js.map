{"version":3,"sources":["components/kkForm.js","actions/boardActions.js","actions/KKListActions.js","actions/KKCardActions.js","actions/index.js","components/kkButton.js","components/kkCard.js","components/kkAddNewButton.js","components/kkCreate.js","components/kkList.js","components/kkBoard.js","components/home.js","components/navbar.js","components/about.js","components/App.js","serviceWorker.js","reducers/boardReducer.js","reducers/currentBoardReducer.js","reducers/listReducer.js","reducers/cardReducer.js","reducers/index.js","store/index.js","index.js"],"names":["Container","styled","div","StyledCard","Card","StyledTextarea","Textarea","ButtonContainer","StyledIcon","Icon","KKForm","React","memo","list","text","onChange","closeForm","children","placeholder","autoFocus","onFocus","e","target","select","onBlur","value","onMouseDown","setCurrentBoard","boardID","type","CONSTANTS","SET_CURRENT_BOARD","payload","addList","listTitle","dispatch","getState","ADD_LIST","currentBoard","listID","uuid","sort","droppableIdStart","droppableIdEnd","droppableIndexStart","droppableIndexEnd","draggableId","DRAG_HAPPENED","addCard","ADD_CARD","cardID","EDIT_CARD","DELETE_CARD","EDIT_LIST_TITLE","DELETE_LIST","ADD_BOARD","DELETE_BOARD","StyledButton","Button","KKButton","onClick","variant","CardContainer","EditButton","DeleteButton","KKCard","id","index","useState","editMode","setEditMode","cardText","setText","eraseCard","deleteCard","preventDefault","newText","editCard","String","provided","ref","innerRef","draggableProps","dragHandleProps","onDoubleClick","fontSize","CardContent","Typography","connect","KKAddNewButton","buttonText","buttonTextOpacity","buttonTextColor","buttonTextBackground","StyledAddNewButton","style","flexShrink","ListContainer","KKCreate","state","formOpen","openForm","setState","handleListInputChange","length","handleCardInputChange","handleAddList","props","handleAddCard","this","Component","StyledInput","input","TitleContainer","ListTitle","h4","KKList","title","cards","setListTitle","handleFocus","handleChange","handleCloseEdit","newListTitle","editListTitle","handleDeleteList","deleteList","droppableId","droppableProps","map","card","key","CreateTitle","h3","KKBoard","onDragEnd","result","destination","source","match","params","lists","board","boards","textAlign","listOrder","boardTitle","direction","listCards","HomeContainer","Thumbnails","Thumbnail","Title","CreateInput","CreateButton","button","newBoardTitle","setNewBoardTitle","handleSubmit","handleDeleteBoard","deleteBoard","Object","entries","href","width","height","display","textDecoration","justifyContent","alignItems","className","zIndex","onSubmit","Navbar","padding","backgroundColor","boxShadow","borderRadius","About","color","App","minHeight","minWidth","overflowY","overflowX","background","marginTop","path","component","Home","from","to","Boolean","window","location","hostname","initialState","boardReducer","action","newBoard","push","newLists","filter","draggedList","splice","currentBoardReducer","listReducer","newList","newState","newCards","startList","endList","cardReducer","newCard","combineReducers","persistConfig","storage","persistedReducer","persistReducer","rootReducer","store","createStore","applyMiddleware","thunk","persistor","persistStore","Store","ReactDOM","render","loading","document","getElementById","$","bind","console","log","nodeName","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.d83db2be.chunk.js","sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Card, Button, Icon } from \"@material-ui/core\";\r\nimport Textarea from \"react-textarea-autosize\";\r\n\r\nconst Container = styled.div`\r\n  width: 284px;\r\n  margin-bottom: 8px;\r\n`;\r\n\r\nconst StyledCard = styled(Card)`\r\n  min-height: 85px;\r\n  padding: 6px 8px 2px;\r\n`;\r\n\r\nconst StyledTextarea = styled(Textarea)`\r\n  resize: none;\r\n  width: 100%;\r\n  overflow: hidden;\r\n  outline: none;\r\n  border: none;\r\n`;\r\n\r\nconst ButtonContainer = styled.div`\r\n  margin-top: 8px;\r\n  display: flex;\r\n  align-items: center;\r\n  margin-left: 8px;\r\n`;\r\n\r\nconst StyledIcon = styled(Icon)`\r\n  margin-left: 8px;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst KKForm = React.memo(\r\n  ({ list, text = \"\", onChange, closeForm, children }) => {\r\n    const placeholder = list\r\n      ? \"Enter list title...\"\r\n      : \"Enter a title for this card...\";\r\n\r\n    const handleFocus = (e) => {\r\n      e.target.select();\r\n    };\r\n\r\n    return (\r\n      <Container>\r\n        <StyledCard>\r\n          <StyledTextarea\r\n            placeholder={placeholder}\r\n            autoFocus\r\n            onFocus={handleFocus}\r\n            onBlur={closeForm}\r\n            value={text}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n        </StyledCard>\r\n        <ButtonContainer>\r\n          {children}\r\n          <StyledIcon onMouseDown={closeForm}>close</StyledIcon>\r\n        </ButtonContainer>\r\n      </Container>\r\n    );\r\n  }\r\n);\r\n\r\nexport default KKForm;\r\n","import { CONSTANTS } from \"./index\";\r\nimport uuid from \"react-uuid\";\r\n\r\nexport const addBoard = (boardTitle) => {\r\n  return {\r\n    type: CONSTANTS.ADD_BOARD,\r\n    payload: {\r\n      boardTitle,\r\n      boardID: uuid(),\r\n    },\r\n  };\r\n};\r\n\r\nexport const deleteBoard = (boardID) => {\r\n  //console.log(\"Board Action: Delete Board\");\r\n  return {\r\n    type: CONSTANTS.DELETE_BOARD,\r\n    payload: {\r\n      boardID,\r\n    },\r\n  };\r\n};\r\n\r\nexport const setCurrentBoard = (boardID) => {\r\n  return {\r\n    type: CONSTANTS.SET_CURRENT_BOARD,\r\n    payload: {\r\n      boardID,\r\n    },\r\n  };\r\n};\r\n","import { CONSTANTS } from \"./index\";\r\nimport uuid from \"react-uuid\";\r\n\r\nexport const addList = (listTitle) => {\r\n  return (dispatch, getState) => {\r\n    dispatch({\r\n      type: CONSTANTS.ADD_LIST,\r\n      payload: {\r\n        listTitle,\r\n        boardID: getState().currentBoard.boardID,\r\n        listID: uuid(),\r\n      },\r\n    });\r\n  };\r\n};\r\n\r\nexport const editListTitle = (listID, newListTitle) => {\r\n  return {\r\n    type: CONSTANTS.EDIT_LIST_TITLE,\r\n    payload: {\r\n      listID,\r\n      newListTitle,\r\n    },\r\n  };\r\n};\r\n\r\nexport const deleteList = (listID) => {\r\n  //console.log(\"List Actions: delete list: \", listID);\r\n  return (dispatch, getState) => {\r\n    return dispatch({\r\n      type: CONSTANTS.DELETE_LIST,\r\n      payload: {\r\n        listID,\r\n        boardID: getState().currentBoard.boardID,\r\n      },\r\n    });\r\n  };\r\n};\r\n\r\nexport const sort = (\r\n  droppableIdStart,\r\n  droppableIdEnd,\r\n  droppableIndexStart,\r\n  droppableIndexEnd,\r\n  draggableId,\r\n  type\r\n) => {\r\n  return (dispatch, getState) => {\r\n    dispatch({\r\n      type: CONSTANTS.DRAG_HAPPENED,\r\n      payload: {\r\n        droppableIdStart,\r\n        droppableIdEnd,\r\n        droppableIndexStart,\r\n        droppableIndexEnd,\r\n        draggableId,\r\n        type,\r\n        boardID: getState().currentBoard.boardID,\r\n      },\r\n    });\r\n  };\r\n};\r\n","import { CONSTANTS } from \"./index\";\r\nimport uuid from \"react-uuid\";\r\n\r\nexport const addCard = (listID, text) => {\r\n  return {\r\n    type: CONSTANTS.ADD_CARD,\r\n    payload: { text, listID, cardID: uuid() },\r\n  };\r\n};\r\n\r\nexport const editCard = (cardID, listID, newText) => {\r\n  return {\r\n    type: CONSTANTS.EDIT_CARD,\r\n    payload: { cardID, listID, newText },\r\n  };\r\n};\r\n\r\nexport const deleteCard = (cardID, listID) => {\r\n  return {\r\n    type: CONSTANTS.DELETE_CARD,\r\n    payload: { cardID, listID },\r\n  };\r\n};\r\n","export * from \"./boardActions\";\r\nexport * from \"./KKListActions\";\r\nexport * from \"./KKCardActions\";\r\n\r\nexport const CONSTANTS = {\r\n  ADD_CARD: \"ADD_CARD\",\r\n  ADD_LIST: \"ADD_LIST\",\r\n  DRAG_HAPPENED: \"DRAG_HAPPENED\",\r\n  EDIT_CARD: \"EDIT_CARD\",\r\n  DELETE_CARD: \"DELETE_CARD\",\r\n  EDIT_LIST_TITLE: \"EDIT_LIST_TITLE\",\r\n  DELETE_LIST: \"DELETE_LIST\",\r\n  ADD_BOARD: \"ADD_BOARD\",\r\n  DELETE_BOARD: \"DELETE_BOARD\",\r\n  SET_CURRENT_BOARD: \"SET_CURRENT_BOARD\",\r\n};\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Button } from \"@material-ui/core\";\r\n\r\nconst StyledButton = styled(Button)`\r\n  && {\r\n    color: white;\r\n    background: #5aac44;\r\n  }\r\n`;\r\n\r\nconst KKButton = ({ text, onClick }) => {\r\n  return (\r\n    <StyledButton variant=\"contained\" onMouseDown={onClick}>\r\n      {text}\r\n    </StyledButton>\r\n  );\r\n};\r\n\r\nexport default KKButton;\r\n","import React, { useState } from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { Card, CardContent, Icon } from \"@material-ui/core\";\r\nimport { Draggable } from \"react-beautiful-dnd\";\r\nimport styled from \"styled-components\";\r\nimport KKForm from \"./kkForm\";\r\nimport { editCard, deleteCard } from \"../actions\";\r\nimport { connect } from \"react-redux\";\r\nimport KKButton from \"./kkButton\";\r\n\r\nconst CardContainer = styled.div`\r\n  margin: 0 0 8px 0;\r\n  position: relative;\r\n  max-width: 100%;\r\n  word-wrap: break-word;\r\n`;\r\n\r\nconst EditButton = styled(Icon)`\r\n  position: absolute;\r\n  display: none;\r\n  right: 5px;\r\n  top: 5px;\r\n  opacity: 0.5;\r\n  ${CardContainer}:hover & {\r\n    display: block;\r\n    cursor: pointer;\r\n  }\r\n  &:hover {\r\n    opacity: 0.8;\r\n  }\r\n`;\r\n\r\nconst DeleteButton = styled(Icon)`\r\n  position: absolute;\r\n  display: none;\r\n  right: 5px;\r\n  bottom: 5px;\r\n  opacity: 0.5;\r\n  ${CardContainer}:hover & {\r\n    display: block;\r\n    cursor: pointer;\r\n  }\r\n  &:hover {\r\n    opacity: 0.8;\r\n  }\r\n`;\r\n\r\nconst KKCard = React.memo(({ text, id, listID, index, dispatch }) => {\r\n  const [editMode, setEditMode] = useState(false);\r\n  const [cardText, setText] = useState(text);\r\n\r\n  const closeForm = (e) => {\r\n    setEditMode(false);\r\n    setText(text);\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    setText(e.target.value);\r\n  };\r\n\r\n  const saveCard = (e) => {\r\n    e.preventDefault();\r\n    dispatch(editCard(id, listID, cardText));\r\n    setEditMode(false);\r\n  };\r\n\r\n  const eraseCard = (e) => {\r\n    dispatch(deleteCard(id, listID));\r\n  };\r\n\r\n  if (editMode)\r\n    return (\r\n      <KKForm\r\n        text={cardText}\r\n        setText={setText}\r\n        closeForm={closeForm}\r\n        onChange={handleChange}\r\n      >\r\n        <KKButton text=\"Save\" onClick={saveCard}></KKButton>\r\n      </KKForm>\r\n    );\r\n\r\n  return (\r\n    <Draggable draggableId={String(id)} index={index}>\r\n      {(provided) => (\r\n        <CardContainer\r\n          ref={provided.innerRef}\r\n          {...provided.draggableProps}\r\n          {...provided.dragHandleProps}\r\n          onDoubleClick={() => setEditMode(true)}\r\n        >\r\n          <Card>\r\n            <EditButton fontSize=\"small\" onMouseDown={() => setEditMode(true)}>\r\n              edit\r\n            </EditButton>\r\n            <DeleteButton fontSize=\"small\" onMouseDown={eraseCard}>\r\n              delete\r\n            </DeleteButton>\r\n            <CardContent>\r\n              <Typography>{text}</Typography>\r\n            </CardContent>\r\n          </Card>\r\n        </CardContainer>\r\n      )}\r\n    </Draggable>\r\n  );\r\n});\r\n\r\nexport default connect()(KKCard);\r\n","import React from \"react\";\r\nimport { Icon } from \"@material-ui/core\";\r\nimport styled from \"styled-components\";\r\n\r\nconst KKAddNewButton = ({ list, onClick }) => {\r\n  const buttonText = list ? \"Add another list\" : \"Add another card\";\r\n  const buttonTextOpacity = list ? 1 : 0.5;\r\n  const buttonTextColor = list ? \"white\" : \"inherit\";\r\n  const buttonTextBackground = list ? \"rgba(0,0,0,.15)\" : \"inherit\";\r\n\r\n  const StyledAddNewButton = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    cursor: pointer;\r\n    border-radius: 3px;\r\n    height: 36px;\r\n    width: 270px;\r\n    margin-left: 8px;\r\n    margin-right: 8px;\r\n    padding-left: 10px;\r\n    padding-right: 10px;\r\n    opacity: ${buttonTextOpacity};\r\n    color: ${buttonTextColor};\r\n    background-color: ${buttonTextBackground};\r\n  `;\r\n\r\n  return (\r\n    <StyledAddNewButton onClick={onClick}>\r\n      <Icon>add</Icon>\r\n      <span style={{ flexShrink: 0 }}> {buttonText}</span>\r\n    </StyledAddNewButton>\r\n  );\r\n};\r\n\r\nexport default KKAddNewButton;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport KKForm from \"./kkForm\";\r\nimport KKButton from \"./kkButton\";\r\nimport KKAddNewButton from \"./kkAddNewButton\";\r\nimport { addList, addCard } from \"../actions\";\r\nimport styled from \"styled-components\";\r\n\r\nconst ListContainer = styled.div`\r\n  border-radius: 3px;\r\n  width: 300px;\r\n  height: 100%;\r\n  margin-right: 8px;\r\n`;\r\n\r\nclass KKCreate extends Component {\r\n  state = {\r\n    formOpen: false,\r\n    text: \"\",\r\n  };\r\n\r\n  openForm = () => {\r\n    this.setState({ formOpen: true });\r\n  };\r\n\r\n  closeForm = (e) => {\r\n    this.setState({ formOpen: false, text: \"\" });\r\n  };\r\n\r\n  handleListInputChange = (e) => {\r\n    if (e.target.value.length <= 20) this.setState({ text: e.target.value });\r\n  };\r\n  handleCardInputChange = (e) => {\r\n    if (e.target.value.length <= 150) this.setState({ text: e.target.value });\r\n  };\r\n\r\n  handleAddList = () => {\r\n    const { dispatch } = this.props;\r\n    const { text } = this.state;\r\n    if (text) {\r\n      this.setState({ text: \"\" });\r\n      dispatch(addList(text));\r\n    }\r\n  };\r\n\r\n  handleAddCard = () => {\r\n    const { dispatch, listID } = this.props;\r\n    const { text } = this.state;\r\n    if (text) {\r\n      this.setState({ text: \"\" });\r\n      dispatch(addCard(listID, text));\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { text, formOpen } = this.state;\r\n    const { list } = this.props;\r\n\r\n    if (list) {\r\n      if (formOpen)\r\n        return (\r\n          <ListContainer>\r\n            <KKForm\r\n              text={text}\r\n              onChange={this.handleListInputChange}\r\n              closeForm={this.closeForm}\r\n            >\r\n              <KKButton text=\"Add List\" onClick={this.handleAddList}></KKButton>\r\n            </KKForm>\r\n          </ListContainer>\r\n        );\r\n      else\r\n        return (\r\n          <ListContainer>\r\n            <KKAddNewButton list={list} onClick={this.openForm} />\r\n          </ListContainer>\r\n        );\r\n    } else {\r\n      if (formOpen)\r\n        return (\r\n          <KKForm\r\n            text={text}\r\n            onChange={this.handleCardInputChange}\r\n            closeForm={this.closeForm}\r\n          >\r\n            <KKButton text=\"Add Card\" onClick={this.handleAddCard}></KKButton>\r\n          </KKForm>\r\n        );\r\n      else return <KKAddNewButton list={list} onClick={this.openForm} />;\r\n    }\r\n  }\r\n}\r\n\r\nexport default connect()(KKCreate);\r\n","import React, { useState } from \"react\";\r\nimport KKCard from \"./kkCard\";\r\nimport KKCreate from \"./kkCreate\";\r\nimport { Droppable, Draggable } from \"react-beautiful-dnd\";\r\nimport styled from \"styled-components\";\r\nimport { connect } from \"react-redux\";\r\nimport { editListTitle, deleteList, deleteCard } from \"../actions\";\r\nimport { Icon } from \"@material-ui/core\";\r\n\r\nconst ListContainer = styled.div`\r\n  background-color: #dfe3e6;\r\n  border-radius: 3px;\r\n  width: 300px;\r\n  height: 100%;\r\n  padding: 8px;\r\n  margin-right: 8px;\r\n`;\r\n\r\nconst StyledInput = styled.input`\r\n  width: 100%;\r\n  border: none;\r\n  outline-color: blue;\r\n  border-radius: 3px;\r\n  margin-bottom: 3px;\r\n  padding: 5px;\r\n`;\r\n\r\nconst TitleContainer = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst ListTitle = styled.h4`\r\n  transition: background 0.3s ease-in;\r\n  ${TitleContainer}:hover & {\r\n    background: #ccc;\r\n  }\r\n`;\r\n\r\nconst DeleteButton = styled(Icon)`\r\n  display: none;\r\n  opacity: 0.5;\r\n  ${TitleContainer}:hover & {\r\n    display: block;\r\n    cursor: pointer;\r\n  }\r\n  &:hover {\r\n    opacity: 0.8;\r\n  }\r\n`;\r\n\r\nconst KKList = React.memo(({ title, cards, listID, index, dispatch }) => {\r\n  const [editMode, setEditMode] = useState(false);\r\n  const [listTitle, setListTitle] = useState(title);\r\n\r\n  const handleFocus = (e) => {\r\n    e.target.select();\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    e.preventDefault();\r\n    if (e.target.value.length <= 20) setListTitle(e.target.value);\r\n  };\r\n\r\n  const handleCloseEdit = (e) => {\r\n    setEditMode(false);\r\n    dispatch(editListTitle(listID, listTitle));\r\n  };\r\n\r\n  const handleDeleteList = () => {\r\n    //console.log(\"KKList: delete list: \", listID);\r\n    dispatch(deleteList(listID));\r\n  };\r\n\r\n  const renderEditInput = () => {\r\n    return (\r\n      <StyledInput\r\n        type=\"text\"\r\n        value={listTitle}\r\n        onChange={handleChange}\r\n        autoFocus\r\n        onFocus={handleFocus}\r\n        onBlur={handleCloseEdit}\r\n      />\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Draggable draggableId={String(listID)} index={index}>\r\n      {(provided) => (\r\n        <ListContainer\r\n          {...provided.draggableProps}\r\n          ref={provided.innerRef}\r\n          {...provided.dragHandleProps}\r\n        >\r\n          <Droppable droppableId={String(listID)} type=\"card\">\r\n            {(provided) => (\r\n              <div>\r\n                <div>\r\n                  {editMode ? (\r\n                    renderEditInput()\r\n                  ) : (\r\n                    <TitleContainer onClick={() => setEditMode(true)}>\r\n                      <ListTitle>{listTitle}</ListTitle>\r\n                      <DeleteButton onClick={handleDeleteList}>\r\n                        delete\r\n                      </DeleteButton>\r\n                    </TitleContainer>\r\n                  )}\r\n                </div>\r\n                <div {...provided.droppableProps} ref={provided.innerRef}>\r\n                  {cards.map((card, index) => (\r\n                    <KKCard\r\n                      key={card.cardID}\r\n                      index={index}\r\n                      text={card.text}\r\n                      id={card.cardID}\r\n                      listID={listID}\r\n                    />\r\n                  ))}\r\n                  {provided.placeholder}\r\n                  <KKCreate listID={listID} />\r\n                </div>\r\n              </div>\r\n            )}\r\n          </Droppable>\r\n        </ListContainer>\r\n      )}\r\n    </Draggable>\r\n  );\r\n});\r\n\r\nexport default connect()(KKList);\r\n","import React, { Component } from \"react\";\r\nimport KKList from \"./kkList\";\r\nimport { connect } from \"react-redux\";\r\nimport { DragDropContext, Droppable } from \"react-beautiful-dnd\";\r\nimport { sort, setCurrentBoard } from \"../actions\";\r\nimport styled from \"styled-components\";\r\nimport KKCreate from \"./kkCreate\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst ListContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n`;\r\n\r\nconst CreateTitle = styled.h3`\r\n  width: 100%;\r\n  font-size: 40px;\r\n  color: white;\r\n  font-weight: bold;\r\n  font-family: Arial, Helvetica, sans-serif;\r\n  margin-top: 55px;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nclass KKBoard extends Component {\r\n  componentDidMount() {\r\n    const { boardID } = this.props.match.params;\r\n    // console.log(\"Board: CDM\", boardID);\r\n    this.props.dispatch(setCurrentBoard(boardID));\r\n  }\r\n\r\n  onDragEnd = (result) => {\r\n    const { destination, source, draggableId, type } = result;\r\n    if (!destination) return;\r\n    this.props.dispatch(\r\n      sort(\r\n        source.droppableId,\r\n        destination.droppableId,\r\n        source.index,\r\n        destination.index,\r\n        draggableId,\r\n        type\r\n      )\r\n    );\r\n  };\r\n\r\n  render() {\r\n    // console.log(\"Board params.boardid: \", this.props.match.params.boardID);\r\n    const { lists, cards, match, boards } = this.props;\r\n    const { boardID } = match.params;\r\n    const board = boards[boardID];\r\n    if (!board)\r\n      return <h1 style={{ textAlign: \"center\" }}>Board not found!</h1>;\r\n\r\n    const listOrder = board.lists;\r\n\r\n    return (\r\n      <DragDropContext onDragEnd={this.onDragEnd}>\r\n        <CreateTitle>{board.boardTitle}</CreateTitle>\r\n        <Droppable droppableId=\"all-lists\" direction=\"horizontal\" type=\"list\">\r\n          {(provided) => (\r\n            <ListContainer {...provided.droppableProps} ref={provided.innerRef}>\r\n              {listOrder.map((listID, index) => {\r\n                const list = lists[listID];\r\n                if (list) {\r\n                  const listCards = list.cards.map((cardID) => cards[cardID]);\r\n                  return (\r\n                    <KKList\r\n                      key={list.listID}\r\n                      listID={list.listID}\r\n                      title={list.listTitle}\r\n                      cards={listCards}\r\n                      index={index}\r\n                    />\r\n                  );\r\n                }\r\n              })}\r\n              {provided.placeholder}\r\n              <KKCreate list />\r\n            </ListContainer>\r\n          )}\r\n        </Droppable>\r\n      </DragDropContext>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  boards: state.boards,\r\n  currentBoard: state.currentBoard,\r\n  lists: state.lists,\r\n  cards: state.cards,\r\n});\r\n\r\nexport default connect(mapStateToProps)(KKBoard);\r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { addBoard, deleteBoard, setCurrentBoard } from \"../actions\";\r\nimport styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport { Icon } from \"@material-ui/core\";\r\n\r\nconst HomeContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  box-sizing: border-box;\r\n`;\r\n\r\nconst Thumbnails = styled.div`\r\n  flex: 1;\r\n  height: 50%;\r\n  margin: 0 auto;\r\n  display: flex;\r\n  flex-direction: row;\r\n  flex-wrap: wrap;\r\n  justify-content: center;\r\n`;\r\n// #afa56c; olive\r\n//#567644; bottle green\r\n//#3b3256; navy blue\r\n//#175160; sherlock genji\r\n//#4b9cdc; sky\r\n//#b53156; crimson\r\n\r\nconst Thumbnail = styled.div`\r\n  height: 100px;\r\n  width: 200px;\r\n  background: #175160;\r\n  padding: 10px;\r\n  margin: 8px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  cursor: pointer;\r\n  border-radius: 5px;\r\n  box-shadow: 0 2px 4px black;\r\n`;\r\n\r\nconst Title = styled.h4`\r\n  color: white;\r\n  text-decoration: none;\r\n  opacity: 1;\r\n  ${Thumbnail}:hover & {\r\n    display: block;\r\n    cursor: pointer;\r\n    opacity: 1;\r\n    text-shadow: 0 0 5px #fff, 0 0 10px #fff, 0 0 15px #0073e6, 0 0 20px #0073e6,\r\n      0 0 25px #0073e6, 0 0 30px #0073e6, 0 0 35px #0073e6;\r\n  }\r\n`;\r\n\r\nconst DeleteButton = styled(Icon)`\r\n  display: block;\r\n  color: white;\r\n  opacity: 0.3;\r\n  ${Thumbnail}:hover & {\r\n    display: block;\r\n    cursor: pointer;\r\n  }\r\n  &:hover {\r\n    opacity: 0.8;\r\n  }\r\n`;\r\n\r\nconst CreateTitle = styled.h3`\r\n  font-size: 48px;\r\n  color: white;\r\n  font-weight: bold;\r\n  font-family: Arial, Helvetica, sans-serif;\r\n  padding: 10px;\r\n  margin-top: 10px;\r\n`;\r\n\r\nconst CreateInput = styled.input`\r\n  width: 300px;\r\n  height: 50px;\r\n  font-size: 20px;\r\n  padding: 10px;\r\n  box-sizing: border-box;\r\n  border-radius: 3px;\r\n  border: none;\r\n  outline-color: blue;\r\n  box-shadow: 0 2px 4px grey;\r\n  align-self: center;\r\n`;\r\n\r\n//#2e7196; b0c4de;008B8B;2F4F4F\r\nconst CreateButton = styled.button`\r\n  width: 70px;\r\n  height: 50px;\r\n  background-color: #2e7196;\r\n  color: white;\r\n  font-size: 17px;\r\n  padding: 10px;\r\n  box-sizing: border-box;\r\n  border-radius: 10px;\r\n  border: none;\r\n  outline-color: blue;\r\n  box-shadow: 0 2px 4px grey;\r\n  align-self: center;\r\n  margin: 10px;\r\n`;\r\n\r\nconst Home = ({ boards, dispatch, match }) => {\r\n  // console.log(\"Home: \", match.params);\r\n  dispatch(setCurrentBoard(null));\r\n  const [newBoardTitle, setNewBoardTitle] = useState(\"\");\r\n\r\n  const handleChange = (e) => {\r\n    if (e.target.value.length < 12) setNewBoardTitle(e.target.value);\r\n  };\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    dispatch(addBoard(newBoardTitle));\r\n    setNewBoardTitle(\"\");\r\n  };\r\n\r\n  const handleDeleteBoard = (e, boardID) => {\r\n    // console.log(\"KKBoard: delete board: \", boardID);\r\n    dispatch(deleteBoard(boardID));\r\n  };\r\n\r\n  const renderAllBoards = () => {\r\n    // console.log(\"Home: Obj:\", boards);\r\n    // console.log(\"Home: ara:\", Object.entries(boards));\r\n    return Object.entries(boards).map(([boardID, board]) => {\r\n      return (\r\n        <Thumbnail>\r\n          <a\r\n            href={`#/boards/${boardID}`}\r\n            style={{\r\n              width: \"100%\",\r\n              height: \"100%\",\r\n              display: \"flex\",\r\n              textDecoration: \"none\",\r\n              textAlign: \"center\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n            }}\r\n          >\r\n            <Title>{board.boardTitle}</Title>\r\n          </a>\r\n\r\n          <div className=\"col-1\">\r\n            <DeleteButton\r\n              style={{ zIndex: \"10\" }}\r\n              onClick={(e) => handleDeleteBoard(e, boardID)}\r\n            >\r\n              delete\r\n            </DeleteButton>\r\n          </div>\r\n        </Thumbnail>\r\n      );\r\n    });\r\n  };\r\n\r\n  const renderCreateNewBoard = () => {\r\n    return (\r\n      <form onSubmit={handleSubmit} style={{ textAlign: \"center\" }}>\r\n        <CreateTitle>Create new Board</CreateTitle>\r\n        <CreateInput\r\n          onChange={handleChange}\r\n          value={newBoardTitle}\r\n          placeholder={\"Enter title and Hit enter\"}\r\n          type=\"text\"\r\n        />\r\n        <CreateButton type=\"button submit\">Create</CreateButton>\r\n      </form>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <HomeContainer>\r\n      <CreateTitle>Boards</CreateTitle>\r\n      <Thumbnails>{renderAllBoards()}</Thumbnails>\r\n      {renderCreateNewBoard()}\r\n    </HomeContainer>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  boards: state.boards,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Home);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport \"./anime.css\";\r\n\r\nclass Navbar extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"fixed-top navbar-dark bg-dark\">\r\n        <div className=\"row my-3\">\r\n          <div className=\"col-4 text-left\">\r\n            <a className=\"text-white\" style={{ padding: \"5px\" }} href=\"#\">\r\n              Home\r\n            </a>\r\n          </div>\r\n          <div className=\"col-4 text-center\">\r\n            <a\r\n              className=\"text-white gh1\"\r\n              style={{\r\n                backgroundColor: \"black\",\r\n                boxShadow: \"0px 0px 5px #fff\",\r\n                textDecoration: \"none\",\r\n                borderRadius: \"8px\",\r\n                padding: \"2px\",\r\n              }}\r\n              href=\"#\"\r\n            >\r\n              K A J K A M\r\n            </a>\r\n          </div>\r\n          <div className=\"col-4 text-right\">\r\n            <a className=\"text-white\" style={{ padding: \"5px\" }} href=\"#/about\">\r\n              About\r\n            </a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  boards: state.boards,\r\n  currentBoard: state.currentBoard,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Navbar);\r\n","import React, { Component } from \"react\";\r\n\r\nclass About extends Component {\r\n  state = {};\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1 style={{ color: \"white\" }}>About Me</h1>\r\n        <p style={{ color: \"white\" }}>\r\n          I am Md Shahriar Hossain Sajib. Currently, working as a C/C++ Software\r\n          Engineer in Samsung R&D Institute. I work in Tizen mobile application\r\n          projects for Samsung Galaxy Watches.\r\n        </p>\r\n        <p style={{ color: \"white\" }}>\r\n          To make this time of quarantine productive, I decided to learn web\r\n          frameworks and make projects. I targeted ReactJS and NodeJS for this.\r\n          This project \"K A J K A M\" is based on React and Redux, deployed on\r\n          Github Pages. There is no backend, the data is stored in the user's\r\n          browser's local storage. So if the local storage is cleared (for\r\n          example by clearing cookies), the data will be gone.\r\n        </p>\r\n        <p style={{ color: \"white\" }}>\r\n          To do this project, I took a lot help from the internet. I saw many\r\n          tutorial videos. One of them was a series on cloning Trello app by a\r\n          channel called \"SelfDevTV\". I followed the videos and also the many\r\n          commits of the git repository.\r\n        </p>\r\n        <p style={{ color: \"white\" }}>\r\n          There are no copyrights related to this project and you can use any of\r\n          the source materials. Link of github repo is{\" \"}\r\n          <a href=\"https://github.com/sajib21/kajkam\">here</a>.\r\n        </p>\r\n        <br />\r\n        <br />\r\n        <h1 style={{ color: \"white\" }}>Contacts</h1>\r\n        <p style={{ color: \"white\" }}>\r\n          LinkedIn:{\" \"}\r\n          <a href=\"https://www.linkedin.com/in/sajibcsedu/\">\r\n            https://www.linkedin.com/in/sajibcsedu/\r\n          </a>\r\n        </p>\r\n        <p style={{ color: \"white\" }}>\r\n          GitHub:{\" \"}\r\n          <a href=\"https://github.com/sajib21\">https://github.com/sajib21</a>\r\n        </p>\r\n        <p style={{ color: \"white\" }}>\r\n          Email: <a href=\"shariarsajib@gmail.com\">shariarsajib@gmail.com</a>\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default About;\r\n","import React, { Component } from \"react\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\nimport KKBoard from \"./kkBoard\";\r\nimport Home from \"./home\";\r\nimport Navbar from \"./navbar\";\r\nimport About from \"./about\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div\r\n        style={{\r\n          minHeight: \"100vh\",\r\n          minWidth: \"100%\",\r\n          overflowY: \"auto\",\r\n          overflowX: \"auto\",\r\n          background: \"linear-gradient(45deg, #dfd819, #0da5f1)\",\r\n          padding: \"15px\",\r\n        }}\r\n      >\r\n        <Navbar />\r\n        <div style={{ marginTop: \"60px\" }}>\r\n          <Switch>\r\n            <Route path=\"/boards/:boardID\" component={KKBoard} />\r\n            <Route path=\"/about\" component={About} />\r\n            <Route path=\"/home\" component={Home} />\r\n            <Redirect from=\"/\" to=\"/home\" />\r\n          </Switch>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { CONSTANTS } from \"../actions\";\r\n\r\nconst initialState = {\r\n  \"board-00\": {\r\n    id: \"board-00\",\r\n    lists: [\"list-00\"],\r\n    boardTitle: \"dev board\",\r\n  },\r\n};\r\n\r\nconst boardReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case CONSTANTS.ADD_BOARD: {\r\n      const { boardTitle, boardID } = action.payload;\r\n      const newBoard = {\r\n        boardID,\r\n        boardTitle,\r\n        lists: [],\r\n      };\r\n      return { ...state, [boardID]: newBoard };\r\n    }\r\n\r\n    //TODO: case CONSTANTS.DELETE_BOARD:\r\n    case CONSTANTS.DELETE_BOARD: {\r\n      const { boardID } = action.payload;\r\n      // console.log(\"Board Reducer: DELETE_BOARD:\", boardID);\r\n      const boards = { ...state };\r\n      delete boards[boardID];\r\n      return boards;\r\n    }\r\n\r\n    // rename board\r\n\r\n    case CONSTANTS.ADD_LIST: {\r\n      const { boardID, listID } = action.payload;\r\n      const board = state[boardID];\r\n      board.lists.push(listID);\r\n      return { ...state, [boardID]: board };\r\n    }\r\n\r\n    case CONSTANTS.DELETE_LIST: {\r\n      const { boardID, listID } = action.payload;\r\n      // console.log(\"Board Reducer: delete list: \", listID, boardID);\r\n      const board = state[boardID];\r\n      const newLists = board.lists.filter((id) => id != listID);\r\n      board.lists = newLists;\r\n      return { ...state, [boardID]: board };\r\n    }\r\n\r\n    case CONSTANTS.DRAG_HAPPENED: {\r\n      const {\r\n        boardID,\r\n        type,\r\n        droppableIndexStart,\r\n        droppableIndexEnd,\r\n      } = action.payload;\r\n      if (type !== \"list\") return state;\r\n      const board = state[boardID];\r\n      const lists = board.lists;\r\n      const draggedList = lists.splice(droppableIndexStart, 1);\r\n      lists.splice(droppableIndexEnd, 0, ...draggedList);\r\n      board.lists = lists;\r\n      return { ...state, [boardID]: board };\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default boardReducer;\r\n","import { CONSTANTS } from \"../actions\";\r\n\r\nconst currentBoardReducer = (state = null, action) => {\r\n  switch (action.type) {\r\n    case CONSTANTS.SET_CURRENT_BOARD: {\r\n      return action.payload;\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default currentBoardReducer;\r\n","import { CONSTANTS } from \"./../actions/index\";\r\n\r\nlet listID = 2,\r\n  cardID = 6;\r\n\r\nconst initialState = {\r\n  \"list-00\": {\r\n    listID: \"list-00\",\r\n    cards: [\"card-00\"],\r\n    listTitle: \"myList\",\r\n    boardID: \"board-00\",\r\n  },\r\n};\r\n\r\nconst listReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case CONSTANTS.ADD_LIST: {\r\n      const { listTitle, listID, boardID } = action.payload;\r\n      const newList = {\r\n        listTitle,\r\n        listID,\r\n        cards: [],\r\n        boardID,\r\n      };\r\n      return { ...state, [listID]: newList };\r\n    }\r\n\r\n    case CONSTANTS.EDIT_LIST_TITLE: {\r\n      const { listID, newListTitle } = action.payload;\r\n      const list = state[listID];\r\n      list.title = newListTitle;\r\n      return { ...state, [listID]: list };\r\n    }\r\n\r\n    case CONSTANTS.DELETE_LIST: {\r\n      const { listID, boardID } = action.payload;\r\n      // console.log(\"ListReducer: delete list: \", listID);\r\n      const newState = state;\r\n      delete newState[listID];\r\n      return newState;\r\n    }\r\n\r\n    case CONSTANTS.ADD_CARD: {\r\n      const { listID, cardID } = action.payload;\r\n      const list = state[listID];\r\n      list.cards.push(cardID);\r\n      return { ...state, [listID]: list };\r\n    }\r\n\r\n    case CONSTANTS.DELETE_CARD: {\r\n      const { cardID, listID } = action.payload;\r\n      const list = state[listID];\r\n      const newCards = list.cards.filter((id) => id !== cardID);\r\n      list.cards = newCards;\r\n      return { ...state, [listID]: list };\r\n    }\r\n\r\n    case CONSTANTS.DRAG_HAPPENED: {\r\n      const {\r\n        droppableIdStart,\r\n        droppableIdEnd,\r\n        droppableIndexStart,\r\n        droppableIndexEnd,\r\n        draggableId,\r\n        type,\r\n      } = action.payload;\r\n\r\n      if (type === \"list\") {\r\n        return state;\r\n      }\r\n\r\n      // in the same list\r\n      if (droppableIdStart === droppableIdEnd) {\r\n        const list = state[droppableIdStart];\r\n        const card = list.cards.splice(droppableIndexStart, 1);\r\n        list.cards.splice(droppableIndexEnd, 0, ...card);\r\n        return { ...state, [droppableIdStart]: list };\r\n      } else {\r\n        const startList = state[droppableIdStart];\r\n        const card = startList.cards.splice(droppableIndexStart, 1);\r\n        const endList = state[droppableIdEnd];\r\n        endList.cards.splice(droppableIndexEnd, 0, ...card);\r\n        return {\r\n          ...state,\r\n          [droppableIdStart]: startList,\r\n          [droppableIdEnd]: endList,\r\n        };\r\n      }\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default listReducer;\r\n","import { CONSTANTS } from \"../actions\";\r\n\r\nconst initialState = {\r\n  \"card-00\": {\r\n    text: \"Dev Card\",\r\n    id: \"card-00\",\r\n    listID: \"list-00\",\r\n  },\r\n};\r\n\r\nconst cardReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case CONSTANTS.ADD_CARD: {\r\n      const { text, listID, cardID } = action.payload;\r\n      const newCard = {\r\n        text,\r\n        cardID,\r\n        listID,\r\n      };\r\n      return { ...state, [cardID]: newCard };\r\n    }\r\n\r\n    case CONSTANTS.EDIT_CARD: {\r\n      const { cardID, newText } = action.payload;\r\n      const card = state[cardID];\r\n      card.text = newText;\r\n      return { ...state, [cardID]: card };\r\n    }\r\n\r\n    case CONSTANTS.DELETE_CARD: {\r\n      const { cardID } = action.payload;\r\n      const newState = state;\r\n      delete newState[cardID];\r\n      return newState;\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default cardReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport boardReducer from \"./boardReducer\";\r\nimport currentBoardReducer from \"./currentBoardReducer\";\r\nimport listReducer from \"./listReducer\";\r\nimport cardReducer from \"./cardReducer\";\r\n\r\nexport default combineReducers({\r\n  boards: boardReducer,\r\n  currentBoard: currentBoardReducer,\r\n  lists: listReducer,\r\n  cards: cardReducer,\r\n});\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"../reducers\";\r\nimport { persistStore, persistReducer } from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\n\r\nconst persistConfig = {\r\n  key: \"kajkamkey\",\r\n  storage,\r\n};\r\n\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\r\n\r\nexport default () => {\r\n  let store = createStore(persistedReducer, applyMiddleware(thunk));\r\n  let persistor = persistStore(store);\r\n  return { store, persistor };\r\n};\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport App from \"./components/App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport Store from \"./store\";\r\nimport \"./index.css\";\r\nimport $ from \"jquery\";\r\nimport { PersistGate } from \"redux-persist/integration/react\";\r\nimport { HashRouter } from \"react-router-dom\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\n\r\nconst { persistor, store } = Store();\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <PersistGate loading={null} persistor={persistor}>\r\n      <HashRouter>\r\n        <App />\r\n      </HashRouter>\r\n    </PersistGate>\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n$(document).bind(\"DOMNodeRemoved\", function (e) {\r\n  console.log(\"Removed: \", e.target.title.nodeName);\r\n});\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}